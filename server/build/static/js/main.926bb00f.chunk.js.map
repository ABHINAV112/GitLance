{"version":3,"sources":["components/layout/UpProbTile.js","components/layout/UpIssueTile.js","pages/Home.js","components/layout/ScoreCard.js","pages/Solve.js","pages/Profile.js","components/auth/LoggedInLinks.js","store/actions/authActions.js","components/auth/LoggedOutLinks.js","components/layout/Navbar.js","serviceWorker.js","pages/Landing.js","components/auth/SignIn.js","components/auth/SignUp.js","store/reducers/authReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","history.js","components/layout/JobUploadForm.js","pages/Upload.js","pages/Problem.js","pages/Issues.js","pages/SolveIssues.js","pages/SolveProblem.js","pages/ProblemSubs.js","pages/Uploaded.js","index.js"],"names":["UpProbTile","props","className","this","title","style","fontSize","description","name","score","submissions","pay","Component","UpIssueTile","repo","axios","require","Home","state","data","data2","get","then","res","records","setState","e","preventDefault","auth","uid","href","map","i","console","log","bountyName","creatorName","Repo","bountyValue","problemHeading","problemDescription","Object","keys","length","to","connect","firebase","ScoreCard","percent","runtime","memory","efficiency","type","overall","Solve","Profile","dispatch","signOut","getState","getFirebase","trigger","src","onClick","LoggedOutLinks","links","Boolean","window","location","hostname","match","Landing","SignIn","email","password","handleChange","target","id","value","handleSubmit","signIn","handleLogInWithGithub","signInWithGithub","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","provider","GithubAuthProvider","signInWithPopup","result","token","credential","accessToken","user","error","code","message","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","initState","authError","authReducer","action","rootReducer","combineReducers","firestore","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","projectId","createBrowserHistory","JobUploadForm","inputFile","outputFile","redirect","onChangeHandler","files","renderRedirect","uploadData","creatorId","displayName","request","options","method","url","headers","body","json","txtReg","search","response","jobRef","app","storage","ref","child","jobId","inputRef","put","history","push","reload","alert","Upload","Problem","recordsLength","rows","Math","ceil","rowMapping","rowData","currRow","outerValue","outerIndex","index","scoreVal","currSubmissions","currBestSubmission","bestSubmissionId","submissionsVal","scores","total","Issues","SolveIssues","SolveProblem","ProblemSubs","submissionKeys","fetch","JSON","stringify","userId","solverUserName","time","Uploaded","store","createStore","compose","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","firebaseConfig","attachAuthIsReady","reduxFirestore","Routing","exact","path","component","ProblemUp","React","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.926bb00f.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\n\nclass UpProbTile extends Component {\n    render(props) {\n        return (\n            <div className=\"container\">\n                <div className=\"card-panel pink darken-2 tile white-text card hoverable\">\n                    <h5>{this.props.title}</h5>\n                    <div className=\"description\">\n                        <h6>Description:</h6>\n                        <p style={{ fontSize: '13px' }}>{this.props.description}</p>\n                    </div>\n                    <div className=\"name\">\n                        <h6>Name: {this.props.name}</h6>\n                    </div>\n                    <div className=\"score\">\n                        <h6>Highest Score: {this.props.score}</h6>\n                    </div>\n                    <div className=\"submissions\">\n                        <h6>Number of Submissions: {this.props.submissions}</h6>\n                    </div>\n                    <h6>Pay: ${this.props.pay}</h6>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UpProbTile","import React, { Component } from 'react'\n\nclass UpIssueTile extends Component {\n    render(props) {\n        return (\n            <div className=\"container\">\n                <div className=\"card-panel teal tile white-text card hoverable\">\n                    <h5>{this.props.title}</h5>\n                    <div className=\"name\">\n                        <h6>Name: {this.props.name}</h6>\n                        {/* <p style={{ fontSize: '13px' }}>{this.props.description}</p> */}\n                    </div>\n                    <div className=\"repo\">\n                        <h6>Repo: {this.props.repo}</h6>\n                    </div>\n                    <div className=\"submissions\">\n                        <h6>Number of Submissions: {this.props.submissions}</h6>\n                    </div>\n                    <h6>Pay: ${this.props.pay}</h6>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UpIssueTile;","import React, { Component } from 'react';\nimport UpProbTile from '../components/layout/UpProbTile';\nimport UpIssueTile from '../components/layout/UpIssueTile';\nimport { BrowserRouter, Link } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\nconst axios = require(\"axios\");\n\nclass Home extends Component {\n    state = {\n        data: [],\n        data2: []\n    }\n    componentDidMount() {\n        axios.get(\"https://git-lance.firebaseapp.com/api/solve/bounty\").then((res) => {\n            var data = res.data.records;\n            this.setState({ data });\n        })\n        axios.get(\"https://git-lance.firebaseapp.com/api/solve/problems\").then((res) => {\n            var data2 = res.data.records;\n            this.setState({ data2 });\n        })\n\n    }\n\n    returnInfo(e) {\n        e.preventDefault()\n        // console.log(e.target.problemHeading)\n        // console.log(e.target.creatorName)\n    }\n\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n        return (\n            <BrowserRouter>\n                <div className=\"container\">\n                    <a href=\"/issues\"><h4> Issues</h4></a>\n                    <ul className=\"list-container\">\n                        {\n                            this.state.data.map(i => {\n                                console.log(i);\n                                return (<li className=\"list-item\"><a href=\"/solissue\"><UpIssueTile\n                                    title={i.bountyName}\n                                    name={i.creatorName}\n                                    repo={i.Repo}\n                                    pay={i.bountyValue}\n                                /></a></li>\n                                );\n                            })\n                        }\n                    </ul>\n                    <a href=\"/problem\"><h4>Problems</h4></a>\n                    <ul className=\"list-container\">\n                        {\n                            this.state.data2.map(i => {\n                                console.log(i);\n                                return (<li className=\"list-item\"><a href=\"/solproblem\"><UpProbTile\n                                    title={i.problemHeading}\n                                    description={i.problemDescription}\n                                    name={i.creatorName}\n                                    score={0}\n                                    submissions={Object.keys(i.submissions).length}\n                                    pay={i.pay}\n                                /></a></li>\n                                );\n                            })\n                        }\n                    </ul>\n                </div>\n            </BrowserRouter >\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(Home);\n\n\n","import React, { Component } from 'react';\nimport { Progress } from 'react-sweet-progress';\nimport \"react-sweet-progress/lib/style.css\";\n\nclass ScoreCard extends Component {\n    render(props) {\n        return (\n            <div className=\"card-panel scorecard white-text\">\n                <div className=\"row\">\n                    <div className=\"col m7\">\n                        <div className=\"row\">\n                            <h4>{this.props.title}</h4>\n                            <div className=\"col m5\">\n                                <h5>Run Time</h5>\n                            </div>\n                            <div className=\"col m5\">\n                                <div className=\"progress-align\">\n                                    <Progress percent={this.props.runtime} />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col m5\">\n                                <h5>Memory</h5>\n                            </div>\n                            <div className=\"col m5\">\n                                <div className=\"progress-align\">\n                                    <Progress percent={this.props.memory} />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col m5\">\n                                <h5>Efficiency</h5>\n                            </div>\n                            <div className=\"col m5\">\n                                <div className=\"progress-align\">\n                                    <Progress percent={this.props.efficiency} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col m5\">\n                        <h4>Overall Score</h4>\n                        <div className=\"circle-align\">\n                            <Progress\n                                type=\"circle\"\n                                percent={this.props.overall}\n                            />\n                        </div>\n                        <button className=\"waves-effect waves-light btn right\">Submit</button>\n                    </div>\n                </div>\n            </div >\n        )\n    }\n}\n\nexport default ScoreCard;","import React, { Component } from 'react'\nimport ScoreCard from '../components/layout/ScoreCard';\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\n\nclass Solve extends Component {\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n        return (\n            <div className=\"container\">\n                <ScoreCard runtime='50' memory='50' efficiency='50' overall='50' />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(Solve);","import React, { Component } from 'react'\n\nclass Profile extends Component {\n    render() {\n        return (\n            <div>\n                Hi\n            </div>\n        )\n    }\n}\n\nexport default Profile","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Dropdown, NavItem } from 'react-materialize'\nimport M from 'materialize-css'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst LoggedInLinks = (props) => {\n    return (\n        <ul className=\"right\">\n            <li>\n                <div>\n                    <Dropdown trigger={\n                        <a className=\"grey darken-3\">\n                            <h6 className=\"nav-header left\">\n                                Solve\n                                    </h6>\n                            <i className=\"material-icons right\">arrow_drop_down</i>\n                        </a>\n                    }>\n                        <NavItem href=\"/home\">Feed</NavItem>\n                        <NavItem href=\"/issues\">Issues</NavItem>\n                        <NavItem href=\"/problem\">Problem</NavItem>\n                    </Dropdown>\n                </div>\n            </li>\n            <li>\n                <Dropdown trigger={\n                    <a className=\"grey darken-3\">\n                        <h6 className=\"nav-header left\">\n                            Upload\n                                    </h6>\n                        <i className=\"material-icons right\">arrow_drop_down</i>\n                    </a>\n                }>\n                    <NavItem href=\"/uploaded\">Feed</NavItem>\n                    <NavItem href=\"/upload\">New Job</NavItem>\n                    <NavItem href=\"/\">Issues</NavItem>\n                    <NavItem href=\"/home\">Problems</NavItem>\n                </Dropdown>\n            </li>\n            <li>\n                <Dropdown trigger={\n                    <a className=\"grey darken-3\">\n                        <h6 className=\"nav-header left\">\n                            Submissions\n                                    </h6>\n                        <i className=\"material-icons right\">arrow_drop_down</i>\n                    </a>\n                }>\n                    <NavItem href=\"/home\">Issues</NavItem>\n                    <NavItem href=\"/solve\">Problem</NavItem>\n                </Dropdown>\n            </li>\n            <li>\n                <Dropdown trigger={\n                    <img src=\"https://i.pravatar.cc/150?img=3\" className=\"btn btn-floating\" />\n                }>\n                    <NavItem href=\"/profile\">My Profile</NavItem>\n                    <NavItem onClick={props.signOut}>Log Out</NavItem>\n                </Dropdown>\n            </li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(LoggedInLinks)","export const signIn = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: \"LOGIN_SUCCESS\" });\n        }).catch((err) => {\n            dispatch({ type: \"LOGIN_ERROR\", err })\n        });\n    }\n}\n\nexport const signInWithGithub = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n        var provider = new firebase.auth.GithubAuthProvider();\n        console.log(\"WOrks\")\n\n        firebase.auth().signInWithPopup(provider).then(function (result) {\n            // This gives you a GitHub Access Token. You can use it to access the GitHub API.\n            console.log(result)\n            var token = result.credential.accessToken;\n            // The signed-in user info.\n            var user = result.user;\n            console.log(token)\n            // ...\n        }).catch(function (error) {\n            // Handle Errors here.\n            console.log(error)\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            // The email of the user's account used.\n            var email = error.email;\n            // The firebase.auth.AuthCredential type that was used.\n            var credential = error.credential;\n            // ...\n        });\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: \"SIGNOUT_SUCCESS\" });\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' })\n        }).catch(err => {\n            dispatch({ type: 'SIGNUP_ERROR', err })\n        })\n    }\n}\n\n// .then((resp) => {\n//     return (\n//         firestore.collection('users').doc(resp.user.uid).set({\n//             firstName: newUser.firstName,\n//             lastName: newUser.lastName\n//         })\n//     )\n// })\n\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst LoggedOutLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li>\n                <NavLink to=\"/signup\"><h6>Sign Up</h6></NavLink>\n            </li>\n            <li>\n                <NavLink to=\"/signin\"><h6>Log In</h6></NavLink>\n            </li>\n        </ul>\n    )\n}\n\nexport default LoggedOutLinks","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport LoggedInLinks from '../auth/LoggedInLinks';\nimport LoggedOutLinks from '../auth/LoggedOutLinks';\nimport { connect } from 'react-redux';\n\n\nconst Navbar = props => {\n    const { auth } = props\n    // console.log(auth)\n    const links = auth.uid ? <LoggedInLinks /> : <LoggedOutLinks />\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to='/home' className=\"brand-logo\">GitLance</Link>\n                {links}\n            </div>\n        </nav>\n    )\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\n\nclass Landing extends Component {\n    render() {\n        const { auth } = this.props;\n        if (auth.uid) return <Redirect to='/home' />\n        return (\n            <div className=\"container\">\n                <h1>INtro</h1>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(Landing);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn, signInWithGithub } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n\n    handleLogInWithGithub = (e) => {\n        e.preventDefault();\n        this.props.signInWithGithub();\n    }\n\n\n    render() {\n        const { auth } = this.props\n        if (auth.uid) return <Redirect to='/home' />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">\n                        Sign In\n                    </h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"input-field col m6\">\n                            <button className=\"btn teal lighten-1 z-depth-0 center-align\">Login</button>\n                        </div>\n                        <div onClick={this.handleLogInWithGithub} className=\"input-field col m6\">\n                            <button className=\"btn teal lighten-1 z-depth-0 center-align\">Github</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds)),\n        signInWithGithub: () => dispatch(signInWithGithub())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state)\n        this.props.signUp(this.state)\n    }\n\n    render() {\n        const { auth } = this.props\n        if (auth.uid) return <Redirect to=\"/home\" />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">\n                        Sign Up\n                    </h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn teal lighten-1 z-depth-0\">Sign Up</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            console.log('login error')\n            return {\n                ...state,\n                authError: 'Login Failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log(\"Signed Out\")\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log(\"signup success\")\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log(\"signup error\")\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state;\n    }\n    return state;\n}\n\nexport default authReducer;","import authReducer from './authReducer'\nimport { combineReducers } from 'redux'\nimport { firebaseReducer } from 'react-redux-firebase'\nimport { firestoreReducer } from 'redux-firestore'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDK3SCSl_LpVx5Fcac4PliMRIZA46E4zBs\",\n    authDomain: \"git-lance.firebaseapp.com\",\n    projectId: \"git-lance\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase","import { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory();","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom';\nimport history from '../../history'\n\nvar redirect = false;\nclass JobUploadForm extends Component {\n    state = {\n        problemHeading: \"\",\n        problemDescription: \"\",\n        pay: \"\",\n        inputFile: \"\",\n        outputFile: \"\",\n        redirect: false\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value,\n        })\n    }\n\n    onChangeHandler = (e) => {\n        this.setState({\n            [e.target.id]: e.target.files[0]\n        })\n    }\n\n    renderRedirect = () => {\n        // this.setState({\n        //     redirect: true\n        // })\n\n    }\n\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        const { auth } = this.props;\n        var uploadData = this.state;\n        uploadData.creatorId = auth.uid;\n        uploadData.creatorName = auth.displayName;\n        console.log(\"upload data\", uploadData);\n        var request = require(\"request\");\n        var options = {\n            method: 'POST',\n            url: 'https://git-lance.firebaseapp.com/api/upload/uploadJob',\n            headers:\n                { 'Content-Type': 'application/json' },\n            body: uploadData,\n            json: true\n        };\n        var txtReg = /(.*?).txt/g;\n        var outRes = uploadData.outputFile.name.search(txtReg);\n        if (outRes === -1) {\n            alert(\"invalid output file!\")\n            return;\n        }\n        var inRes = uploadData.inputFile.name.search(txtReg);\n        if (inRes === -1) {\n            alert(\"invalid input file!\");\n            return;\n        }\n        request(options, function (error, response, body) {\n            console.log(body);\n            var firebase = require(\"firebase\");\n            var storage = firebase.app().storage(\"gs://git-lance.appspot.com\");\n            var storageRef = storage.ref();\n            var userRef = storageRef.child(uploadData.creatorId)\n            var jobRef = userRef.child(body.jobId);\n            var inputRef = jobRef.child('input');\n            var outputRef = jobRef.child('output');\n            outputRef.put(uploadData.outputFile);\n            inputRef.put(uploadData.inputFile);\n            // this.renderRedirect();\n            // redirect = true;\n            history.push('/home')\n            window.location.reload()\n        });\n    }\n\n    render(state) {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n        // if (redirect) {\n        //     console.log(\"gonna redirect biatchh\");\n        //     return <Redirect to='/home' />\n        // }\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">\n                        Job Upload Form\n                    </h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"problemHeading\">problemHeading</label>\n                        <input type=\"text\" id=\"problemHeading\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"problemDescription\">problemDescription</label>\n                        <input type=\"text\" id=\"problemDescription\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"pay\">Pay</label>\n                        <input type=\"number\" id=\"pay\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"input-field col m6\">\n                            <label >Input Test File</label>\n                            <input type=\"file\" id=\"inputFile\" onChange={this.onChangeHandler} />\n                        </div>\n                        <div className=\"input-field col m6\">\n                            <label>Output Test File</label>\n                            <input type=\"file\" id=\"outputFile\" onChange={this.onChangeHandler} />\n                        </div>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn teal lighten-1 z-depth-0 center-align\">Upload Job</button>\n                    </div>\n                </form>\n            </div >\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(JobUploadForm);","import React, { Component } from 'react'\nimport JobUploadForm from '../components/layout/JobUploadForm';\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\nclass Upload extends Component {\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to=\"/signin\" />\n        return (\n            <JobUploadForm />\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(Upload);","import React, { Component } from 'react'\nimport UpProbTile from '../components/layout/UpProbTile';\n\n\nclass Problem extends Component {\n    state = {\n        data: []\n    }\n    componentDidMount() {\n        var axios = require('axios');\n        axios.get(\"https://git-lance.firebaseapp.com/api/solve/problems\").then((res) => {\n            var data = res.data.records;\n            this.setState({ data });\n        })\n\n    }\n\n\n\n    render() {\n        var recordsLength = this.state.data.length;\n        console.log(\"Records\", recordsLength)\n        var rows = Math.ceil(recordsLength / 4);\n        var count = 0;\n        var rowMapping = [];\n        for (let i = 0; i < rows; i++) rowMapping.push(i);\n        console.log(\"rowMapp\", rowMapping)\n        var rowData = [];\n        var currRow = []\n        for (let i = 0; i < recordsLength; i++) {\n            if (i % 4 != 0 || i == 0) {\n                currRow.push(this.state.data[i]);\n            }\n            else {\n                rowData.push(currRow);\n                currRow = [];\n                currRow.push(this.state.data[i]);\n            }\n            if (i == recordsLength - 1) {\n                currRow.push(this.state.data[i]);\n                rowData.push(currRow);\n            }\n        }\n        console.log(\"Data\", rowData)\n        return (\n            <div className=\"container\">\n                <h4>Problems</h4>\n                {/* <div className=\"row\">\n                    <div className=\"col m3\">\n                        <UpIssueTile />\n                    </div>\n                    <div className=\"col m3\">\n                        <UpIssueTile />\n                    </div>\n                    <div className=\"col m3\">\n                        <UpIssueTile />\n                    </div>\n                    <div className=\"col m3\">\n                        <UpIssueTile />\n                    </div>\n                </div> */}\n                {\n                    rowMapping.map((outerValue, outerIndex) => {\n                        return (\n                            <div className=\"row\">\n                                {\n                                    rowData[outerIndex].map(\n                                        (value, index) => {\n                                            var scoreVal = \"no submissions\";\n                                            var currSubmissions = value.submissions;\n                                            var currBestSubmission = value.bestSubmissionId;\n                                            var submissionsVal = \"no submissions\";\n                                            if (Object.keys(currSubmissions).length) {\n                                                submissionsVal = Object.keys(currSubmissions).length;\n                                                scoreVal = currSubmissions[currBestSubmission].scores.total;\n                                            }\n                                            return (\n                                                <div className=\"col m3\">\n                                                    <a href=\"/solproblem\"><UpProbTile\n                                                        title={value.problemHeading}\n                                                        description={value.problemDescription}\n                                                        name={value.creatorName}\n                                                        score={scoreVal}\n                                                        submissions={submissionsVal}\n                                                        pay={value.pay}\n                                                    /></a>\n                                                </div>\n                                            )\n                                        }\n                                    )\n                                }\n                            </div>\n\n                        )\n\n                    })\n                }\n            </div>\n        )\n    }\n}\n\nexport default Problem","import React, { Component } from 'react'\nimport UpIssueTile from '../components/layout/UpIssueTile';\n\n\nclass Issues extends Component {\n    state = {\n        data: []\n    }\n    componentDidMount() {\n        var axios = require('axios');\n        axios.get(\"https://git-lance.firebaseapp.com/api/solve/bounty\").then((res) => {\n            var data = res.data.records;\n            this.setState({ data });\n        })\n\n    }\n\n\n\n    render() {\n        var recordsLength = this.state.data.length;\n        console.log(\"Records\", recordsLength)\n        var rows = Math.ceil(recordsLength / 4);\n        var count = 0;\n        var rowMapping = [];\n        for (let i = 0; i < rows; i++) rowMapping.push(i);\n        console.log(\"rowMapp\", rowMapping)\n        var rowData = [];\n        var currRow = []\n        for (let i = 0; i < recordsLength; i++) {\n            if (i % 4 != 0 || i == 0) {\n                currRow.push(this.state.data[i]);\n            }\n            else {\n                rowData.push(currRow);\n                currRow = [];\n                currRow.push(this.state.data[i]);\n            }\n            if (i == recordsLength - 1) {\n                currRow.push(this.state.data[i]);\n                rowData.push(currRow);\n            }\n        }\n        console.log(\"Data\", rowData)\n        return (\n            <div className=\"container\">\n                <h4>Issues</h4>\n                {/* <div className=\"row\">\n                    <div className=\"col m3\">\n                        <UpIssueTile />\n                    </div>\n                    <div className=\"col m3\">\n                        <UpIssueTile />\n                    </div>\n                    <div className=\"col m3\">\n                        <UpIssueTile />\n                    </div>\n                    <div className=\"col m3\">\n                        <UpIssueTile />\n                    </div>\n                </div> */}\n                {\n                    rowMapping.map((outerValue, outerIndex) => {\n                        return (\n                            <div className=\"row\">\n                                {\n                                    rowData[outerIndex].map(\n                                        (value, index) => {\n                                            return (\n                                                <div className=\"col m3\">\n                                                    <a href=\"/solissue\"><UpIssueTile\n                                                        title={value.bountyName}\n                                                        name={value.creatorName}\n                                                        repo={value.Repo}\n                                                        pay={value.bountyValue}\n                                                    /></a>\n                                                </div>\n                                            )\n                                        }\n                                    )\n                                }\n                            </div>\n\n                        )\n\n                    })\n                }\n            </div>\n        )\n    }\n}\n\nexport default Issues","import React, { Component } from 'react'\n\nclass SolveIssues extends Component {\n    render() {\n        return (\n            <h4>SolveIsss</h4>\n        )\n    }\n}\n\nexport default SolveIssues;","import React, { Component } from 'react'\n\nclass SolveProblem extends Component {\n    render() {\n        return (\n            <h4>SolveProb</h4>\n        )\n    }\n}\n\nexport default SolveProblem;","import React, { Component } from 'react'\nimport ScoreCard from '../components/layout/ScoreCard';\n\n// this is where we will have all problems uploaded by user\nclass ProblemSubs extends Component {\n    constructor() {\n        super();\n        this.state = {\n            submissions: [],\n            submissionKeys: []\n        }\n    }\n\n    componentDidMount() {\n        var fetch = require(\"node-fetch\");\n\n        var options = {\n            method: 'POST',\n            url: 'https://git-lance.firebaseapp.com/api/upload/jobSubmission',\n            headers:\n            {\n                'cache-control': 'no-cache',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ userId: 'LyNg9CA2GhUBfYIRnO9OLDkNWg03', jobId: 'job_21' }),\n            json: true\n        };\n\n        fetch(options.url, options).then((res) => res.json()).then((res) => { this.setState({ \"submissions\": res.submissions }); this.setState({ \"submissionKeys\": Object.keys(res.submissions) }); console.log(this.state) })\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                {\n                    this.state.submissionKeys.map((value) => {\n                        return (<ScoreCard\n                            title={this.state.submissions[value].solverUserName}\n                            runtime={this.state.submissions[value].scores.time % 101}\n                            memory={this.state.submissions[value].scores.memory % 101}\n                            efficiency={this.state.submissions[value].scores.efficiency % 101}\n                            overall={this.state.submissions[value].scores.total % 101}\n                        />)\n                    })\n\n                }\n\n            </div>\n        )\n    }\n}\n\nexport default ProblemSubs;","import React, { Component } from 'react';\nimport UpProbTile from '../components/layout/UpProbTile';\nimport UpIssueTile from '../components/layout/UpIssueTile';\nimport { BrowserRouter, Link } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\nconst axios = require(\"axios\");\n\nclass Uploaded extends Component {\n    state = {\n        data: [],\n        data2: []\n    }\n    componentDidMount() {\n        axios.get(\"https://git-lance.firebaseapp.com/api/solve/bounty\").then((res) => {\n            var data = res.data.records;\n            this.setState({ data });\n        })\n        axios.get(\"https://git-lance.firebaseapp.com/api/solve/problems\").then((res) => {\n            var data2 = res.data.records;\n            this.setState({ data2 });\n        })\n\n    }\n\n    returnInfo(e) {\n        e.preventDefault()\n        // console.log(e.target.problemHeading)\n        // console.log(e.target.creatorName)\n    }\n\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n        return (\n            <BrowserRouter>\n                <div className=\"container\">\n                    <a href=\"/issues\"><h4>Uploaded Issues</h4></a>\n                    <ul className=\"list-container\">\n                        {\n                            this.state.data.map(i => {\n                                console.log(i);\n                                return (<li className=\"list-item\"><a href=\"/\"><UpIssueTile\n                                    title={i.bountyName}\n                                    name={i.creatorName}\n                                    repo={i.Repo}\n                                    pay={i.bountyValue}\n                                /></a></li>\n                                );\n                            })\n                        }\n                    </ul>\n                    <a href=\"/problem\"><h4>Uploaded Problems</h4></a>\n                    <ul className=\"list-container\">\n                        {\n                            this.state.data2.map(i => {\n                                console.log(i);\n                                return (<li className=\"list-item\"><a href=\"/subproblem\"><UpProbTile\n                                    title={i.problemHeading}\n                                    description={i.problemDescription}\n                                    name={i.creatorName}\n                                    score={0}\n                                    submissions={Object.keys(i.submissions).length}\n                                    pay={i.pay}\n                                /></a></li>\n                                );\n                            })\n                        }\n                    </ul>\n                </div>\n            </BrowserRouter >\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(Uploaded);\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport './App.css'\nimport './index.css';\nimport 'materialize-css';\nimport Home from './pages/Home';\nimport Solve from './pages/Solve';\nimport Profile from './pages/Profile'\nimport Navbar from './components/layout/Navbar';\nimport * as serviceWorker from './serviceWorker';\nimport Landing from './pages/Landing';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport firebaseConfig from './config/firebaseConfig'\nimport Upload from './pages/Upload';\nimport history from './history'\nimport Problem from './pages/Problem'\nimport Issues from './pages/Issues';\nimport SolveIssues from './pages/SolveIssues';\nimport SolveProblem from './pages/SolveProblem';\nimport ProblemUp from './pages/ProblemSubs';\nimport Uploaded from './pages/Uploaded';\n\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reactReduxFirebase(firebaseConfig, { attachAuthIsReady: true }),\n        reduxFirestore(firebaseConfig)\n    )\n);\n\nclass Routing extends React.Component {\n    render() {\n        return (\n            <Router history={history}>\n                <Navbar />\n                <div>\n                    <Route exact path=\"/\" component={Landing} />\n                    <Route path=\"/issues\" component={Issues} />\n                    <Route path=\"/signin\" component={SignIn} />\n                    <Route path=\"/signup\" component={SignUp} />\n                    <Route path=\"/home\" component={Home} />\n                    <Route path=\"/profile\" component={Profile} />\n                    <Route path=\"/upload\" component={Upload} />\n                    <Route path=\"/solve\" component={Solve} />\n                    <Route path=\"/problem\" component={Problem} />\n                    <Route path=\"/solissue\" component={SolveIssues} />\n                    <Route path=\"/solproblem\" component={SolveProblem} />\n                    <Route path=\"/subproblem\" component={ProblemUp} />\n                    <Route path=\"/uploaded\" component={Uploaded} />\n                </div>\n            </Router>\n        )\n    }\n}\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><Routing /></Provider>, document.getElementById('root'));\n})\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}