{"version":3,"sources":["components/layout/UpProbTile.js","components/layout/UpIssueTile.js","pages/solve/FeedSolve.js","pages/aesthetics/Profile.js","components/auth/LoggedInLinks.js","store/actions/authActions.js","components/auth/LoggedOutLinks.js","components/layout/Navbar.js","pages/aesthetics/Landing.js","components/auth/SignIn.js","components/auth/SignUp.js","store/reducers/authReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","history.js","components/layout/JobUploadForm.js","pages/uploads/Upload.js","pages/solve/Problem.js","pages/solve/Issues.js","components/layout/IssueSolution.js","pages/workspace/SolveIssues.js","components/layout/ProblemSolution.js","pages/workspace/SolveProblem.js","components/layout/ScoreCard.js","pages/subto/ProblemSubs.js","pages/uploads/Uploaded.js","pages/uploads/UploadedIssues.js","pages/uploads/UploadedProblems.js","pages/functional/Buy.js","components/layout/SubmittedIssue.js","pages/subto/IssueSubs.js","components/layout/ProblemSubmitted.js","pages/subby/SubmittedProblems.js","components/layout/IssueSubmitted.js","pages/subby/SubmittedIssues.js","index.js"],"names":["UpProbTile","props","className","this","title","style","fontSize","description","name","score","submissions","pay","Component","UpIssueTile","repo","FeedSolve","state","data","data2","options","auth","fetch","require","method","url","headers","body","JSON","stringify","userId","uid","json","then","res","records","setState","length","href","map","i","to","pathname","bountyName","creatorName","Repo","bountyValue","problemHeading","problemDescription","Object","keys","connect","firebase","Profile","LoggedInLinks","photoURL","trigger","balance","src","onClick","signOut","dispatch","getState","getFirebase","type","LoggedOutLinks","Navbar","money","links","Landing","SignIn","email","password","handleChange","e","target","id","value","handleSubmit","preventDefault","signIn","handleLogInWithGithub","signInWithGithub","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","provider","GithubAuthProvider","signInWithPopup","result","credential","accessToken","user","error","code","message","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","initState","authError","authReducer","action","rootReducer","combineReducers","firestore","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","projectId","createBrowserHistory","JobUploadForm","inputFile","outputFile","redirect","memoryLimit","timeLimit","inputString","outputString","onChangeHandler","files","uploadData","creatorId","displayName","read1","FileReader","readAsText","onloadend","read2","request","txtReg","search","setTimeout","response","history","push","window","location","reload","alert","Upload","Problem","recordsLength","rows","Math","ceil","rowMapping","rowData","currRow","outerValue","outerIndex","index","scoreVal","currSubmissions","currBestSubmission","bestSubmissionId","submissionsVal","scores","total","Issues","IssueSolution","answer","uploadedSol","gitUserName","gitRepoCreator","gitRepository","issueId","issue","solverId","solverUserName","SolveIssues","ProblemSolution","entrypoint","language","myCode","jsonData","makeScore","input","testCaseScore","calculateOutput","split","timeScore","round","memScore","convert","memory","time","efficiency","arr1","arr2","matches","m","parseInt","KB","MB","GB","B","console","log","solutionUpload","output","formData","FormData","append","jobId","clear","encType","SolveProblem","ScoreCard","dataProblem","dataSolver","percent","solverID","ProblemSubs","submissionKeys","Uploaded","UploadedIssues","UploadedProblems","Buy","handleBuy","paymentDetails","from","amount","handleReject","SubmittedIssue","IssueSubs","ProblemSubmitted","SubmittedProblem","IssueSubmitted","gitRepo","SubmittedIssues","store","createStore","compose","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","firebaseConfig","attachAuthIsReady","reduxFirestore","Routing","exact","path","component","withRouter","React","firebaseAuthIsReady","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b64f042.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\n\nclass UpProbTile extends Component {\n    render(props) {\n        return (\n            <div className=\"container\">\n                <div className=\"card-panel pink darken-2 tile white-text card hoverable\">\n                    <h5>{this.props.title}</h5>\n                    <div className=\"description\">\n                        <h6>Description:</h6>\n                        <p style={{ fontSize: '13px' }}>{this.props.description}</p>\n                    </div>\n                    <div className=\"name\">\n                        <h6>Name: {this.props.name}</h6>\n                    </div>\n                    <div className=\"score\">\n                        <h6>Highest Score: {this.props.score}</h6>\n                    </div>\n                    <div className=\"submissions\">\n                        <h6>Number of Submissions: {this.props.submissions}</h6>\n                    </div>\n                    <h6>Pay: ${this.props.pay}</h6>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UpProbTile","import React, { Component } from 'react'\n\nclass UpIssueTile extends Component {\n    render(props) {\n        return (\n            <div className=\"container\">\n                <div className=\"card-panel teal tile white-text card hoverable\">\n                    <h5>{this.props.title}</h5>\n                    <div className=\"name\">\n                        <h6>Name: {this.props.name}</h6>\n                        {/* <p style={{ fontSize: '13px' }}>{this.props.description}</p> */}\n                    </div>\n                    <div className=\"repo\">\n                        <h6>Repo: {this.props.repo}</h6>\n                    </div>\n                    <div className=\"submissions\">\n                        <h6>Number of Submissions: {this.props.submissions}</h6>\n                    </div>\n                    <h6>Pay: ${this.props.pay}</h6>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UpIssueTile;","import React, { Component } from 'react';\nimport UpProbTile from '../../components/layout/UpProbTile';\nimport UpIssueTile from '../../components/layout/UpIssueTile';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\n\nclass FeedSolve extends Component {\n    state = {\n        data: [],\n        data2: []\n    }\n    componentDidMount() {\n        // axios.get(\"https://git-lance.firebaseapp.com/api/solve/bounty\").then((res) => {\n        //     var data = res.data.records;\n        //     this.setState({ data });\n        // })\n        // axios.get(\"https://git-lance.firebaseapp.com/api/solve/problems\").then((res) => {\n        //     var data2 = res.data.records;\n        //     this.setState({ data2 });\n        // })\n\n        const { auth } = this.props;\n\n        var fetch = require(\"node-fetch\");\n        var options = {\n            method: 'POST',\n            url: 'https://git-lance.firebaseapp.com/api/solve/bounty',\n            headers:\n            {\n                'Postman-Token': '6f722472-ad24-4388-be60-fad98c77d367',\n                'cache-control': 'no-cache',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ userId: auth.uid }),\n            json: true\n        };\n\n        fetch(options.url, options).then((res) => res.json()).then((res) => {\n            var data = res.records;\n            this.setState({ data })\n        })\n\n\n\n        var options = {\n            method: 'POST',\n            url: 'https://git-lance.firebaseapp.com/api/solve/problems',\n            headers:\n            {\n                'Postman-Token': 'db30edf6-fbd6-41ad-acc7-75417ebf0299',\n                'cache-control': 'no-cache',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ userId: auth.uid }),\n            json: true\n        };\n\n        fetch(options.url, options).then((res) => res.json()).then((res) => {\n            var data2 = res.records;\n            this.setState({ data2 })\n        })\n\n    }\n\n\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n        if (this.state.data.length && this.state.data2.length) {\n            return (\n                <div className=\"container\">\n                    <a href=\"/issues\"><h4> Issues</h4></a>\n                    <div className=\"tile-container\">\n                        <ul className=\"list-container\">\n                            {\n\n                                this.state.data.map(i => {\n                                    return (<li className=\"list-item\"><Link to={{ pathname: \"/solissue\", data: i }}>\n                                        <UpIssueTile\n                                            title={i.bountyName}\n                                            name={i.creatorName}\n                                            repo={i.Repo}\n                                            pay={i.bountyValue}\n                                        /></Link></li>\n                                    );\n                                })\n                            }\n                        </ul>\n                    </div>\n                    <a href=\"/problem\"><h4>Problems</h4></a>\n                    <div className=\"tile-container\">\n                        <ul className=\"list-container\">\n                            {\n                                this.state.data2.map(i => {\n\n                                    return (<li className=\"list-item\"><Link to={{\n                                        pathname: \"/solproblem\", data: i\n                                    }}> <UpProbTile\n                                            title={i.problemHeading}\n                                            description={i.problemDescription}\n                                            name={i.creatorName}\n                                            score={0}\n                                            submissions={Object.keys(i.submissions).length}\n                                            pay={i.pay}\n                                        /></Link></li>\n                                    );\n                                })\n                            }\n                        </ul>\n                    </div>\n                </div>\n\n            )\n        }\n        else if (this.state.data.length && this.state.data2.length === 0) {\n            return (\n                <div className=\"container\">\n                    <a href=\"/issues\"><h4> Issues</h4></a>\n                    <div className=\"tile-container\">\n                        <ul className=\"list-container\">\n                            {\n\n                                this.state.data.map(i => {\n                                    return (<li className=\"list-item\"><Link to={{ pathname: \"/solissue\", data: i }}>\n                                        <UpIssueTile\n                                            title={i.bountyName}\n                                            name={i.creatorName}\n                                            repo={i.Repo}\n                                            pay={i.bountyValue}\n                                        /></Link></li>\n                                    );\n                                })\n                            }\n                        </ul>\n                    </div>\n                    <a href=\"/problem\"><h4>Problems</h4></a>\n                    <div className=\"container\">\n                        <div className=\"tile-container\">\n                            <div className=\"center-text\">\n                                <h5>No Problems to Solve</h5>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n            )\n        }\n        else if (this.state.data.length === 0 && this.state.data2.length) {\n            return (\n                <div className=\"container\">\n                    <a href=\"/issues\"><h4> Issues</h4></a>\n                    <div className=\"container\">\n                        <div className=\"tile-container\">\n                            <div className=\"center-text\">\n                                <h5>No Issues to Solve</h5>\n                            </div>\n                        </div>\n                    </div>\n                    <a href=\"/problem\"><h4>Problems</h4></a>\n                    <div className=\"tile-container\">\n                        <ul className=\"list-container\">\n                            {\n                                this.state.data2.map(i => {\n\n                                    return (<li className=\"list-item\"><Link to={{\n                                        pathname: \"/solproblem\", data: i\n                                    }}> <UpProbTile\n                                            title={i.problemHeading}\n                                            description={i.problemDescription}\n                                            name={i.creatorName}\n                                            score={0}\n                                            submissions={Object.keys(i.submissions).length}\n                                            pay={i.pay}\n                                        /></Link></li>\n                                    );\n                                })\n                            }\n                        </ul>\n                    </div>\n                </div>\n            )\n        }\n        else {\n            return (\n                <div className=\"container\">\n                    <a href=\"/issues\"><h4> Issues</h4></a>\n                    <div className=\"container\">\n                        <div className=\"tile-container\">\n                            <div className=\"center-text\">\n                                <h5>No Issues to Solve</h5>\n                            </div>\n                        </div>\n                    </div>\n                    <a href=\"/problem\"><h4>Problems</h4></a>\n                    <div className=\"container\">\n                        <div className=\"tile-container\">\n                            <div className=\"center-text\">\n                                <h5>No Problems to Solve</h5>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(FeedSolve);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\nclass Profile extends Component {\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to=\"/\" />\n        return (\n            <div>\n                Coming Soon...\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(Profile)","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Dropdown, NavItem } from 'react-materialize'\nimport M from 'materialize-css'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nclass LoggedInLinks extends Component {\n    render(props) {\n        const { auth } = this.props;\n        if (auth.photoURL) {\n            return (\n                <ul className=\"right\">\n                    <li>\n                        <div>\n                            <Dropdown trigger={\n                                <a className=\"grey darken-3\">\n                                    <h6 className=\"nav-header left\">\n                                        Solve\n                                        </h6>\n                                    <i className=\"material-icons right\">arrow_drop_down</i>\n                                </a>\n                            }>\n                                <NavItem href=\"/home\">Feed</NavItem>\n                                <NavItem href=\"/issues\">Issues</NavItem>\n                                <NavItem href=\"/problem\">Problem</NavItem>\n                            </Dropdown>\n                        </div>\n                    </li>\n                    <li>\n                        <Dropdown trigger={\n                            <a className=\"grey darken-3\">\n                                <h6 className=\"nav-header left\">\n                                    Upload\n                                        </h6>\n                                <i className=\"material-icons right\">arrow_drop_down</i>\n                            </a>\n                        }>\n                            <NavItem href=\"/uploaded\">Feed</NavItem>\n                            <NavItem href=\"/upload\">New Job</NavItem>\n                            <NavItem href=\"/uploadedissues\">Issues</NavItem>\n                            <NavItem href=\"/uploadedproblems\">Problems</NavItem>\n                        </Dropdown>\n                    </li>\n                    <li>\n                        <Dropdown trigger={\n                            <a className=\"grey darken-3\">\n                                <h6 className=\"nav-header-pos left\">\n                                    Submissions\n                                        </h6>\n                                <i className=\"material-icons right\">arrow_drop_down</i>\n                            </a>\n                        }>\n                            <NavItem href=\"/issuesub\">Issues</NavItem>\n                            <NavItem href=\"/problemsub\">Problem</NavItem>\n                        </Dropdown>\n                    </li>\n                    <li>\n                        <h6 className=\"nav-pos-header\">Balance: ${this.props.balance}</h6>\n                    </li>\n                    <li>\n                        <Dropdown trigger={\n                            <h6><img src={auth.photoURL} className=\"btn-floating\" /></h6>\n                        }>\n                            <NavItem href=\"/profile\">My Profile</NavItem>\n                            <NavItem onClick={this.props.signOut}>Log Out</NavItem>\n                        </Dropdown>\n                    </li>\n                </ul>\n            )\n        }\n        else {\n            return (\n                <ul className=\"right\">\n                    <li>\n                        <div>\n                            <Dropdown trigger={\n                                <a className=\"grey darken-3\">\n                                    <h6 className=\"nav-header left\">\n                                        Solve\n                                        </h6>\n                                    <i className=\"material-icons right\">arrow_drop_down</i>\n                                </a>\n                            }>\n                                <NavItem href=\"/home\">Feed</NavItem>\n                                <NavItem href=\"/issues\">Issues</NavItem>\n                                <NavItem href=\"/problem\">Problem</NavItem>\n                            </Dropdown>\n                        </div>\n                    </li>\n                    <li>\n                        <Dropdown trigger={\n                            <a className=\"grey darken-3\">\n                                <h6 className=\"nav-header left\">\n                                    Upload\n                                        </h6>\n                                <i className=\"material-icons right\">arrow_drop_down</i>\n                            </a>\n                        }>\n                            <NavItem href=\"/uploaded\">Feed</NavItem>\n                            <NavItem href=\"/upload\">New Job</NavItem>\n                            <NavItem href=\"/uploadedissues\">Issues</NavItem>\n                            <NavItem href=\"/uploadedproblems\">Problems</NavItem>\n                        </Dropdown>\n                    </li>\n                    <li>\n                        <Dropdown trigger={\n                            <a className=\"grey darken-3\">\n                                <h6 className=\"nav-header left\">\n                                    Submissions\n                                        </h6>\n                                <i className=\"material-icons right\">arrow_drop_down</i>\n                            </a>\n                        }>\n                            <NavItem href=\"/issuesub\">Issues</NavItem>\n                            <NavItem href=\"/problemsub\">Problem</NavItem>\n                        </Dropdown>\n                    </li>\n                    <li>\n                        <Dropdown trigger={\n                            <img src=\"https://i0.wp.com/afa.org.sg/wordpress/wp-content/uploads/2014/05/icon-user-default-copy.png?ssl=1\" className=\"btn btn-floating\" />\n                        }>\n                            <NavItem href=\"/profile\">My Profile</NavItem>\n                            <NavItem onClick={this.props.signOut}>Log Out</NavItem>\n                        </Dropdown>\n                    </li>\n                </ul>\n            )\n        }\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoggedInLinks);","export const signIn = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: \"LOGIN_SUCCESS\" });\n        }).catch((err) => {\n            dispatch({ type: \"LOGIN_ERROR\", err })\n        });\n    }\n}\n\nexport const signInWithGithub = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n        var provider = new firebase.auth.GithubAuthProvider();\n\n        firebase.auth().signInWithPopup(provider).then(function (result) {\n            // This gives you a GitHub Access Token. You can use it to access the GitHub API.\n            var token = result.credential.accessToken;\n            // The signed-in user info.\n            var user = result.user;\n\n            // ...\n        }).catch(function (error) {\n            // Handle Errors here.\n\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            // The email of the user's account used.\n            var email = error.email;\n            // The firebase.auth.AuthCredential type that was used.\n            var credential = error.credential;\n            // ...\n        });\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: \"SIGNOUT_SUCCESS\" });\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' })\n        }).catch(err => {\n            dispatch({ type: 'SIGNUP_ERROR', err })\n        })\n    }\n}\n\n// .then((resp) => {\n//     return (\n//         firestore.collection('users').doc(resp.user.uid).set({\n//             firstName: newUser.firstName,\n//             lastName: newUser.lastName\n//         })\n//     )\n// })\n\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst LoggedOutLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li>\n                <div className=\"nav-element\">\n                    <NavLink to=\"/signup\"><h6>Sign Up</h6></NavLink>\n                </div>\n            </li>\n            <li>\n                <div className=\"nav-element\">\n                    <NavLink to=\"/signin\"><h6>Log In</h6></NavLink>\n                </div>\n            </li>\n        </ul>\n    )\n}\n\nexport default LoggedOutLinks","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport LoggedInLinks from '../auth/LoggedInLinks';\nimport LoggedOutLinks from '../auth/LoggedOutLinks';\nimport { connect } from 'react-redux';\n\n\nclass Navbar extends Component {\n    state = {\n        balance: \"\"\n    }\n    componentDidMount() {\n        var fetch = require(\"node-fetch\");\n\n        const { auth } = this.props;\n\n        var options = {\n            method: 'POST',\n            url: 'https://git-lance.firebaseapp.com/api/payment/checkBalance',\n            headers:\n            {\n                'Postman-Token': '26f87995-73a1-4979-a9e6-85e9e20d518e',\n                'cache-control': 'no-cache',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ userId: auth.uid }),\n            json: true\n        };\n\n        fetch(options.url, options).then(res => res.json()).then(res => {\n            this.setState({\n                balance: res.money\n            })\n        })\n\n    }\n    render(props) {\n        const { auth } = this.props\n        // (auth)\n        const links = auth.uid ? <LoggedInLinks balance={this.state.balance} /> : <LoggedOutLinks />\n        return (\n            <nav className=\"nav-wrapper grey darken-3\">\n                <div className=\"container\">\n                    <Link to='/home' className=\"brand-logo\">GitLance</Link>\n                    {links}\n                </div>\n            </nav>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\n\nclass Landing extends Component {\n    render() {\n        const { auth } = this.props;\n        if (auth.uid) return <Redirect to='/home' />\n        return (\n            <div className=\"container\">\n                <h1>INtro</h1>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(Landing);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn, signInWithGithub } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n\n    handleLogInWithGithub = (e) => {\n        e.preventDefault();\n        this.props.signInWithGithub();\n    }\n\n\n    render() {\n        const { auth } = this.props\n        if (auth.uid) return <Redirect to='/home' />\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col m4\">\n                    </div>\n                    <div className=\"col m4\">\n                        <form onSubmit={this.handleSubmit} className=\"white\">\n                            <h5 className=\"grey-text text-darken-3\">\n                                Sign In\n                    </h5>\n                            <div className=\"input-field\">\n                                <label htmlFor=\"email\">Email</label>\n                                <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                            </div>\n                            <div className=\"input-field\">\n                                <label htmlFor=\"password\">Password</label>\n                                <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"input-field col m6\">\n                                    <button className=\"btn teal lighten-1 z-depth-0 center-align\">Login</button>\n                                </div>\n                                <div onClick={this.handleLogInWithGithub} className=\"input-field col m6\">\n                                    <button className=\"btn teal lighten-1 z-depth-0 center-align\">Github</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                    <div className=\"col m4\">\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds)),\n        signInWithGithub: () => dispatch(signInWithGithub())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        this.props.signUp(this.state)\n    }\n\n    render() {\n        const { auth } = this.props\n        if (auth.uid) return <Redirect to=\"/home\" />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">\n                        Sign Up\n                    </h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn teal lighten-1 z-depth-0\">Sign Up</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n\n            return {\n                ...state,\n                authError: 'Login Failed'\n            }\n        case 'LOGIN_SUCCESS':\n\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n\n            return state;\n        case 'SIGNUP_SUCCESS':\n\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state;\n    }\n    return state;\n}\n\nexport default authReducer;","import authReducer from './authReducer'\nimport { combineReducers } from 'redux'\nimport { firebaseReducer } from 'react-redux-firebase'\nimport { firestoreReducer } from 'redux-firestore'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDK3SCSl_LpVx5Fcac4PliMRIZA46E4zBs\",\n    authDomain: \"git-lance.firebaseapp.com\",\n    projectId: \"git-lance\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase","import { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory();","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom';\nimport history from '../../history'\n\nvar redirect = false;\nclass JobUploadForm extends Component {\n    state = {\n        problemHeading: \"\",\n        problemDescription: \"\",\n        pay: \"\",\n        inputFile: \"\",\n        outputFile: \"\",\n        redirect: false,\n        memoryLimit: \"\",\n        timeLimit: \"\",\n        inputString: \"\",\n        outputString: \"\"\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value,\n        })\n    }\n\n    onChangeHandler = (e) => {\n        this.setState({\n            [e.target.id]: e.target.files[0]\n        })\n    }\n\n\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n\n\n        (\"output\", outputString)\n            (\"input\", inputString)\n\n        const { auth } = this.props;\n        var uploadData = this.state;\n        uploadData.creatorId = auth.uid;\n        uploadData.creatorName = auth.displayName;\n        var inputFile = this.state.inputFile;\n        var outputFile = this.state.outputFile;\n        var inputString;\n        var outputString;\n\n        var read1 = new FileReader();\n        read1.readAsText(inputFile);\n        read1.onloadend = () => {\n            inputString = read1.result\n            uploadData.inputString = inputString\n        }\n\n        var read2 = new FileReader();\n\n        read2.readAsText(outputFile);\n        read2.onloadend = () => {\n            outputString = read2.result\n            uploadData.outputString = outputString\n        }\n\n        var request = require(\"request\");\n        var options = {\n            method: 'POST',\n            url: 'https://git-lance.firebaseapp.com/api/upload/uploadJob',\n            headers:\n                { 'Content-Type': 'application/json' },\n            body: uploadData,\n            json: true\n        };\n        var txtReg = /(.*?).txt/g;\n        var outRes = uploadData.outputFile.name.search(txtReg);\n        if (outRes === -1) {\n            alert(\"invalid output file!\")\n            return;\n        }\n        var inRes = uploadData.inputFile.name.search(txtReg);\n        if (inRes === -1) {\n            alert(\"invalid input file!\");\n            return;\n        }\n        setTimeout(function () {\n            request(options, function (error, response, body) {\n\n                history.push('/home')\n                window.location.reload()\n            })\n        }, 5000);\n    }\n\n    render(state) {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n        // if (redirect) {\n        //     (\"gonna redirect biatchh\");\n        //     return <Redirect to='/home' />\n        // }\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">\n                        Job Upload Form\n                    </h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"problemHeading\">problemHeading</label>\n                        <input type=\"text\" id=\"problemHeading\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"problemDescription\">problemDescription</label>\n                        <input type=\"text\" id=\"problemDescription\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"pay\">Pay</label>\n                        <input type=\"number\" id=\"pay\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"memoryLimit\">Memory in Bytes</label>\n                        <input type=\"number\" id=\"memoryLimit\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"timeLimit\">Time in Microseconds</label>\n                        <input type=\"number\" id=\"timeLimit\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"input-field col m6\">\n                            <h6 className=\"grey-text lighten-3\">Input Test File</h6>\n                            <input type=\"file\" id=\"inputFile\" onChange={this.onChangeHandler} />\n                        </div>\n                        <div className=\"input-field col m6\">\n                            <h6 className=\"grey-text lighten-3\">Output Test File</h6>\n                            <input type=\"file\" id=\"outputFile\" onChange={this.onChangeHandler} />\n                        </div>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn teal lighten-1 z-depth-0 center-align\">Upload Job</button>\n                    </div>\n                </form>\n            </div >\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(JobUploadForm);","import React, { Component } from 'react'\nimport JobUploadForm from '../../components/layout/JobUploadForm';\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\nclass Upload extends Component {\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to=\"/signin\" />\n        return (\n            <JobUploadForm />\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(Upload);","import React, { Component } from 'react'\nimport UpProbTile from '../../components/layout/UpProbTile';\nimport { connect } from 'react-redux'\nimport { Link, Redirect } from 'react-router-dom'\n\n\nclass Problem extends Component {\n    state = {\n        data: []\n    }\n    componentDidMount() {\n        // var axios = require('axios');\n        // axios.get(\"https://git-lance.firebaseapp.com/api/solve/problems\").then((res) => {\n        //     var data = res.data.records;\n        //     this.setState({ data });\n        // })\n\n        const { auth } = this.props\n\n        var fetch = require('node-fetch');\n\n        var options = {\n            method: 'POST',\n            url: 'https://git-lance.firebaseapp.com/api/solve/problems',\n            headers:\n            {\n                'Postman-Token': 'db30edf6-fbd6-41ad-acc7-75417ebf0299',\n                'cache-control': 'no-cache',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ userId: auth.uid }),\n            json: true\n        };\n\n        fetch(options.url, options).then((res) => res.json()).then((res) => {\n            var data = res.records;\n            this.setState({ data })\n        })\n\n    }\n\n\n\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n        var recordsLength = this.state.data.length;\n\n        var rows = Math.ceil(recordsLength / 4);\n        var count = 0;\n        var rowMapping = [];\n        for (let i = 0; i < rows; i++) rowMapping.push(i);\n\n        var rowData = [];\n        var currRow = []\n        for (let i = 0; i < recordsLength; i++) {\n            if (i % 4 != 0 || i == 0) {\n                currRow.push(this.state.data[i]);\n            }\n            else {\n                rowData.push(currRow);\n                currRow = [];\n                currRow.push(this.state.data[i]);\n            }\n            if (i == recordsLength - 1) {\n                currRow.push(this.state.data[i]);\n                rowData.push(currRow);\n            }\n        }\n\n        if (this.state.data.length) {\n            return (\n                <div className=\"container\">\n                    <h4>Problems</h4>\n                    {/* <div className=\"row\">\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                    </div> */}\n                    {\n                        rowMapping.map((outerValue, outerIndex) => {\n                            return (\n                                <div className=\"row\">\n                                    {\n                                        rowData[outerIndex].map(\n                                            (value, index) => {\n                                                var scoreVal = \"no submissions\";\n                                                var currSubmissions = value.submissions;\n                                                var currBestSubmission = value.bestSubmissionId;\n                                                var submissionsVal = \"no submissions\";\n                                                if (Object.keys(currSubmissions).length) {\n                                                    submissionsVal = Object.keys(currSubmissions).length;\n                                                    scoreVal = currSubmissions[currBestSubmission].scores.total;\n                                                }\n                                                return (\n                                                    <div className=\"col m3\">\n                                                        <Link to={{ pathname: \"/solproblem\", data: value }}><UpProbTile\n                                                            title={value.problemHeading}\n                                                            description={value.problemDescription}\n                                                            name={value.creatorName}\n                                                            score={scoreVal}\n                                                            submissions={submissionsVal}\n                                                            pay={value.pay}\n                                                        /></Link>\n                                                    </div>\n                                                )\n                                            }\n                                        )\n                                    }\n                                </div>\n\n                            )\n\n                        })\n                    }\n                </div>\n            )\n        }\n        else {\n            return (\n                <div className=\"container\">\n                    <h4>Problems</h4>\n                    {/* <div className=\"row\">\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                    </div> */}\n\n                    <div className=\"row\">\n                        <div className=\"center-text\">\n                            <h5>No Problems to Solve</h5>\n                        </div>\n                    </div>\n\n\n\n\n                </div>\n            )\n        }\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(Problem)","import React, { Component } from 'react'\nimport UpIssueTile from '../../components/layout/UpIssueTile';\nimport { connect } from 'react-redux'\nimport { Link, Redirect } from 'react-router-dom'\n\n\nclass Issues extends Component {\n    state = {\n        data: []\n    }\n    componentDidMount() {\n        // var axios = require('axios');\n        // axios.get(\"https://git-lance.firebaseapp.com/api/solve/bounty\").then((res) => {\n        //     var data = res.data.records;\n        //     this.setState({ data });\n        // })\n\n        const { auth } = this.props;\n\n        var fetch = require('node-fetch');\n\n        var options = {\n            method: 'POST',\n            url: 'https://git-lance.firebaseapp.com/api/solve/bounty',\n            headers:\n            {\n                'Postman-Token': '6f722472-ad24-4388-be60-fad98c77d367',\n                'cache-control': 'no-cache',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ userId: auth.uid }),\n            json: true\n        };\n\n        fetch(options.url, options).then((res) => res.json()).then((res) => {\n            var data = res.records;\n            this.setState({ data })\n        })\n\n    }\n\n\n\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n\n        var recordsLength = this.state.data.length;\n\n        var rows = Math.ceil(recordsLength / 4);\n        var count = 0;\n        var rowMapping = [];\n        for (let i = 0; i < rows; i++) rowMapping.push(i);\n\n        var rowData = [];\n        var currRow = []\n        for (let i = 0; i < recordsLength; i++) {\n            if (i % 4 != 0 || i == 0) {\n                currRow.push(this.state.data[i]);\n            }\n            else {\n                rowData.push(currRow);\n                currRow = [];\n                currRow.push(this.state.data[i]);\n            }\n            if (i == recordsLength - 1) {\n                currRow.push(this.state.data[i]);\n                rowData.push(currRow);\n            }\n        }\n\n        if (this.state.data.length) {\n            return (\n                <div className=\"container\">\n                    <h4>Issues</h4>\n                    {/* <div className=\"row\">\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                    </div> */}\n                    {\n                        rowMapping.map((outerValue, outerIndex) => {\n                            return (\n                                <div className=\"row\">\n                                    {\n                                        rowData[outerIndex].map(\n                                            (value, index) => {\n                                                return (\n                                                    <div className=\"col m3\">\n                                                        <Link to={{ pathname: \"/solissue\", data: value }} > <UpIssueTile\n                                                            title={value.bountyName}\n                                                            name={value.creatorName}\n                                                            repo={value.Repo}\n                                                            pay={value.bountyValue}\n                                                        /> </Link>\n                                                    </div>\n                                                )\n                                            }\n                                        )\n                                    }\n                                </div>\n\n                            )\n\n                        })\n                    }\n                </div>\n            )\n        }\n        else {\n            return (\n                <div className=\"container\">\n                    <h4>Issues</h4>\n                    {/* <div className=\"row\">\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                    </div> */}\n                    <div className=\"center-text\">\n                        <h5>No Issues to Solve</h5>\n                    </div>\n                </div>\n            )\n        }\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(Issues)","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport history from '../../history';\nclass IssueSolution extends Component {\n\n    state = {\n        answer: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n\n    }\n\n    handleSubmit = (e) => {\n        const { auth } = this.props;\n\n        var uploadedSol = {\n            gitUserName: this.props.data.gitRepoCreator,\n            gitRepository: this.props.data.Repo,\n            issueId: this.props.data.issue,\n            solverId: auth.uid,\n            solverUserName: auth.displayName,\n            answer: this.state.answer\n        }\n            (uploadedSol)\n        var fetch = require(\"node-fetch\");\n\n        var options = {\n            method: 'POST',\n            url: 'https://git-lance.firebaseapp.com/api/solve/submission/issue',\n            headers:\n            {\n                'Postman-Token': 'b021c797-c6df-434f-8184-193dc71ccacd',\n                'cache-control': 'no-cache',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(uploadedSol),\n            // {\n            //     gitUserName: 'Arcadier',\n            //     gitRepository: 'Developer-Community-Support',\n            //     issueId: 'issue_6',\n            //     solverId: 'solverI1',\n            //     solverUserName: 'solver1',\n            //     answer: 'please dddon\\'t npm i ------g thanos.js'\n            // }\n            json: true\n        };\n        fetch(options.url, options).then(() => {\n            history.push('/home')\n            window.location.reload()\n        })\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"card-panel card-border teal lighten-2 white-text issuesol\">\n                    <div className=\"row\">\n                        <div className=\"col m4\">\n                            <h3>Issue: </h3>\n                            <div className=\"issue-desc\">\n                                <h5>{this.props.data.bountyName}</h5>\n                            </div>\n                            <h4>Repo: </h4>\n                            <h5>{this.props.data.Repo}</h5>\n                        </div>\n                        <div className=\"col m8\">\n                            <div>\n                                <textarea className=\"white card-border textsol\" id=\"answer\" onChange={this.handleChange}>\n                                </textarea>\n                            </div>\n                            <button className=\"right btn card-border red\" onClick={this.handleSubmit}>Submit</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(IssueSolution);","import React, { Component } from 'react'\nimport IssueSolution from '../../components/layout/IssueSolution';\n\nclass SolveIssues extends Component {\n    componentDidMount() {\n\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                <IssueSolution\n                    data={this.props.location.data}\n                />\n            </div>\n        )\n    }\n}\n\nexport default SolveIssues;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\n\nclass ProblemSolution extends Component {\n    state = {\n        entrypoint: \"\",\n        language: \"\",\n        myCode: \"\",\n        jsonData: \"\"\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n\n    onChangeHandler = (e) => {\n        this.setState({\n            [e.target.id]: e.target.files[0]\n        })\n    }\n\n    makeScore = (input, response) => {\n        var testCaseScore = this.calculateOutput(\n            input[\"output\"].split(\"\\n\"),\n            response[\"stdout\"].split(\"\\n\")\n        );\n        var timeScore = Math.round((1 - response[\"timeTaken\"] / input[\"time\"]) * 100);\n        if (timeScore < 0) {\n            timeScore = 0;\n        }\n        //   console.log(convert(response[\"memory\"]));\n        var memScore = Math.round(\n            (1 - this.convert(response[\"memory\"]) / input[\"memory\"]) * 100\n        );\n        if (memScore < 0) {\n            memScore = 0;\n        }\n        return {\n            memory: memScore,\n            time: timeScore,\n            efficiency: testCaseScore,\n            total: Math.round((memScore + timeScore + testCaseScore) / 3)\n        };\n    }\n\n    calculateOutput = (arr1, arr2) => {\n        var matches = 0;\n        for (var i = 0; i < arr1.length; i++) {\n            if (arr2[i]) {\n                if (arr1[i] == arr2[i]) {\n                    matches += 1;\n                }\n            }\n        }\n        return Math.round((matches / arr1.length) * 100);\n    }\n    convert = (memory) => {\n        var m = memory.split(\" \");\n        //   console.log(m);\n        var num = parseInt(m[0]);\n        var unit = m[1];\n\n        var conv = { KB: 1024, MB: 1048576, GB: 1073741, B: 1 };\n        var converted = num * conv[unit];\n        return converted;\n    }\n\n    handleSubmit = (e) => {\n        const { auth } = this.props;\n        var fetch = require(\"node-fetch\");\n        // var input = {\n        //     output: this.props.data.outputString,\n        //     memory: this.props.data.memoryLimit,\n        //     time: this.props.data.timeLimit\n        // }\n\n        console.log(this.props.data)\n\n        var input = {\n            output: \"['Naseer', 'is', 'Awesome', 'Damn', 'Son']\",\n            memory: 10000000,\n            time: 5000\n        }\n\n        var solutionUpload;\n\n        e.preventDefault();\n        var formData = new FormData(e.target);\n        // formData.append(\"entrypoint\", this.state.entrypoint);\n        // formData.append(\"language\", this.state.language);\n        // formData.append(\"myCode\", this.state.myCode);\n        // // formData.append(\"\",this.props.inputString);\n        formData.append(\"input_text\", \"1 2 3 4 5\");\n        // const config = {\n        //     headers: { 'content-type': 'multipart/form-data' }\n        // }\n        console.log(...formData);\n        var URL = \"http://compiler-env.i3hveummcp.ap-southeast-1.elasticbeanstalk.com/compile\"\n        fetch(URL, {\n            \"method\": \"POST\",\n            \"body\": formData\n        }).then((res) => (res.json())).then(json => {\n            console.log(json)\n            console.log(this.makeScore(input, json))\n            solutionUpload = {\n                creatorId: this.props.data.creatorId,\n                jobId: this.props.data.jobId,\n                solverId: auth.uid,\n                solverUserName: auth.displayName,\n                scores: this.makeScore(input, json)\n            }\n        });\n\n        var options = {\n            method: 'POST',\n            url: 'https://git-lance.firebaseapp.com/api/solve/submission/problem',\n            headers:\n            {\n                'Postman-Token': '6ac9a555-e1d8-421c-b68b-d09f44dc38e1',\n                'cache-control': 'no-cache',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(solutionUpload),\n            // {\n            //     creatorId: 'KHqk1SGYQ9SWPD8bcjqI1SNug2X2',\n            //     jobId: 'job_1',\n            //     solverId: 'LyNg9CA2GhUBfYIRnO9OLDkNWg03',\n            //     solverUserName: 'a shiv alagar',\n            //     codeUrl: 'code/repository/name111',\n            //     scores: { memory: 59, time: 69, efficiency: 79, total: 100 }\n            // },\n            json: true\n        };\n\n        fetch(options.url, options).then(res => res.json()).then(res => console.log(res))\n        console.clear();\n        // request(options, function (error, response, body) {\n        //     if (error) throw new Error(error);\n\n        //     console.log(body);\n        // });\n    }\n\n\n    render() {\n        console.log(this.props.data)\n        return (\n            <div className=\"card-panel card-border red lighten-2 white-text\">\n                <div className=\"row\">\n\n                    <h4>{this.props.data.problemHeading}</h4>\n                    <h5>Pay: ${this.props.data.pay}</h5>\n                    <div className=\"row\">\n                        <div className=\"col m4\">\n                            <h5>Description:</h5>\n                        </div>\n                        <div className=\"col m8\">\n                            <h6>{this.props.data.problemDescription}</h6>\n                        </div>\n\n                    </div>\n                    <form onSubmit={this.handleSubmit} method=\"post\" encType=\"multipart/form-data\">\n                        <div className=\"input-field\">\n                            <label className=\"white-text\" htmlFor=\"entrypoint\">Enter entrypoint</label>\n                            <input type=\"text\" id=\"entrypoint\" name=\"entrypoint\" onChange={this.handleChange} />\n                        </div>\n                        <div>\n                            <label className=\"white-text\" htmlFor=\"language\">Enter language</label>\n                            {/* <select name=\"language\" id=\"language\" onChange={this.handleChange}>\n                                <option value=\"python\">Python</option>\n                                <option value=\"C\">C</option>\n                                <option value=\"C++\">C++</option>\n                                <option value=\"java\">Java</option>\n                            </select> */}\n                            <input type=\"text\" id=\"language\" name=\"language\" onChange={this.handleChange} />\n                        </div>\n\n                        <div className=\"input-field col m6\">\n                            <h6 className=\"white-text\">Input your code here</h6>\n                            <input type=\"file\" id=\"myCode\" name=\"myCode\" onChange={this.onChangeHandler} />\n                        </div>\n                        <div className=\"input-field btn-pos-cor\">\n                            <button className=\"btn teal lighten-1 z-depth-0 right\">Upload Solution</button>\n                        </div>\n                    </form>\n                </div>\n                {/* <div className=\"col m5\">\n                        <div className=\"container\">\n\n                            <div className=\"card-panel card-border code-up card-overflow\">\n                                <i className=\"material-icons grey-text large center-align icon-pos\">cloud_upload</i>\n                                <h6 className=\"grey-text\">Upload a ZIP of your Files</h6>\n                                <div className=\"button-pos\">\n                                    \n                                </div>\n                            </div>\n                        </div>\n                    </div> */}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(ProblemSolution)","import React, { Component } from 'react'\nimport ProblemSolution from '../../components/layout/ProblemSolution';\n\nclass SolveProblem extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <ProblemSolution\n                    data={this.props.location.data}\n                />\n            </div>\n        )\n    }\n}\n\nexport default SolveProblem;","import React, { Component } from 'react';\nimport { Progress } from 'react-sweet-progress';\nimport \"react-sweet-progress/lib/style.css\";\nimport { Link } from 'react-router-dom'\n\nclass ScoreCard extends Component {\n    render(props) {\n\n        return (\n            <div className=\"card-panel scorecard white-text\">\n                <div className=\"row\">\n                    <div className=\"col m7\">\n                        <div className=\"row\">\n                            <h4>{this.props.dataProblem.data.problemHeading}</h4>\n                            <h5>{this.props.dataSolver.solverUserName}</h5>\n                            <div className=\"col m5\">\n                                <h5>Run Time</h5>\n                            </div>\n                            <div className=\"col m5\">\n                                <div className=\"progress-align\">\n                                    <Progress percent={this.props.dataSolver.scores.time % 101} />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col m5\">\n                                <h5>Memory</h5>\n                            </div>\n                            <div className=\"col m5\">\n                                <div className=\"progress-align\">\n                                    <Progress percent={this.props.dataSolver.scores.memory % 101} />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col m5\">\n                                <h5>Efficiency</h5>\n                            </div>\n                            <div className=\"col m5\">\n                                <div className=\"progress-align\">\n                                    <Progress percent={this.props.dataSolver.scores.efficiency % 101} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col m5\">\n                        <h4>Overall Score</h4>\n                        <div className=\"circle-align\">\n                            <Progress\n                                type=\"circle\"\n                                percent={this.props.dataSolver.scores.total % 101}\n                            />\n                        </div>\n                        <Link to={{ pathname: \"/buy\", dataSolver: this.props.dataSolver, dataProblem: this.props.dataProblem.data, solverID: this.props.solverID }}><button className=\"waves-effect waves-light btn right\">Buy</button></Link>\n                    </div>\n                </div>\n            </div >\n        )\n    }\n}\n\nexport default ScoreCard;","import React, { Component } from 'react'\nimport ScoreCard from '../../components/layout/ScoreCard';\nimport { connect } from 'react-redux'\n\n// this is where we will have all problems uploaded by user\nclass ProblemSubs extends Component {\n    constructor() {\n        super();\n        this.state = {\n            submissions: [],\n            submissionKeys: []\n        }\n    }\n\n    componentDidMount() {\n        var fetch = require(\"node-fetch\");\n\n        const { auth } = this.props;\n\n        var options = {\n            method: 'POST',\n            url: 'https://git-lance.firebaseapp.com/api/upload/jobSubmission',\n            headers:\n            {\n                'cache-control': 'no-cache',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ userId: auth.uid, jobId: \"job_21\" }),\n            json: true\n        };\n        {/*this.props.location.data.jobId*/ }\n        fetch(options.url, options).then((res) => res.json()).then((res) => { this.setState({ \"submissions\": res.submissions }); this.setState({ \"submissionKeys\": Object.keys(res.submissions) }); })\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                {\n                    this.state.submissionKeys.map((value) => {\n                        return (<ScoreCard\n                            // title={this.state.submissions[value].solverUserName}\n                            // runtime={this.state.submissions[value].scores.time % 101}\n                            // memory={this.state.submissions[value].scores.memory % 101}\n                            // efficiency={this.state.submissions[value].scores.efficiency % 101}\n                            // overall={this.state.submissions[value].scores.total % 101}\n                            dataSolver={this.state.submissions[value]}\n                            dataProblem={this.props.location}\n                            solverID={value}\n                        />)\n                    })\n\n                }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(ProblemSubs);","import React, { Component } from 'react';\nimport UpProbTile from '../../components/layout/UpProbTile';\nimport UpIssueTile from '../../components/layout/UpIssueTile';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\n\nclass Uploaded extends Component {\n    state = {\n        data: [],\n        data2: []\n    }\n    componentDidMount() {\n        // axios.get(\"https://git-lance.firebaseapp.com/api/solve/bounty\").then((res) => {\n        //     var data = res.data.records;\n        //     this.setState({ data });\n        // })\n        // axios.get(\"https://git-lance.firebaseapp.com/api/solve/problems\").then((res) => {\n        //     var data2 = res.data.records;\n        //     this.setState({ data2 });\n        // })\n\n        const { auth } = this.props;\n\n        var fetch = require(\"node-fetch\");\n\n        var options = {\n            method: 'POST',\n            url: 'https://git-lance.firebaseapp.com/api/upload/uploadedIssues',\n            headers:\n            {\n                'Postman-Token': '41582a4d-a65f-40d8-ac5d-ca27b473348d',\n                'cache-control': 'no-cache',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ userId: auth.uid }),\n            json: true\n        };\n\n        fetch(options.url, options).then((res) => res.json()).then((res) => {\n            var data = res.records;\n            this.setState({ data })\n        })\n\n        var options = {\n            method: 'POST',\n            url: 'https://git-lance.firebaseapp.com/api/upload/uploadedProblems',\n            headers:\n            {\n                'Postman-Token': '90e98916-3334-4913-9fbf-8242fdd295d1',\n                'cache-control': 'no-cache',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ userId: auth.uid }),\n            json: true\n        };\n\n        fetch(options.url, options).then((res) => res.json()).then((res) => {\n            var data2 = res.records;\n            this.setState({ data2 })\n        })\n\n    }\n\n\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n        if (this.state.data.length && this.state.data2.length) {\n            return (\n\n                <div className=\"container\">\n                    <a href=\"/uploadedissues\"><h4>Uploaded Issues</h4></a>\n                    <ul className=\"list-container\">\n                        {\n                            this.state.data.map(i => {\n                                return (<li className=\"list-item\"><Link to={{ pathname: \"/subissue\", data: i }}>\n                                    <UpIssueTile\n                                        title={i.bountyName}\n                                        name={i.creatorName}\n                                        repo={i.Repo}\n                                        pay={i.bountyValue}\n                                    /></Link></li>\n                                );\n                            })\n                        }\n                    </ul>\n                    <a href=\"/uploadedproblems\"><h4>Uploaded Problems</h4></a>\n                    <ul className=\"list-container\">\n                        {\n                            this.state.data2.map(i => {\n\n                                return (<li className=\"list-item\"><Link to={{\n                                    pathname: \"/subproblem\", data: i\n                                }}> <UpProbTile\n                                        title={i.problemHeading}\n                                        description={i.problemDescription}\n                                        name={i.creatorName}\n                                        score={0}\n                                        submissions={Object.keys(i.submissions).length}\n                                        pay={i.pay}\n                                    /></Link></li>\n                                );\n                            })\n                        }\n                    </ul>\n                </div>\n\n            )\n        } else if (this.state.data.length && this.state.data2.length == 0) {\n            return (\n\n                <div className=\"container\">\n                    <a href=\"/uploadedissues\"><h4>Uploaded Issues</h4></a>\n                    <ul className=\"list-container\">\n                        {\n                            this.state.data.map(i => {\n                                return (<li className=\"list-item\"><Link to={{ pathname: \"/subissue\", data: i }}>\n                                    <UpIssueTile\n                                        title={i.bountyName}\n                                        name={i.creatorName}\n                                        repo={i.Repo}\n                                        pay={i.bountyValue}\n                                    /></Link></li>\n                                );\n                            })\n                        }\n                    </ul>\n                    <a href=\"/uploadedproblems\"><h4>Uploaded Problems</h4></a>\n                    <div className=\"container\">\n                        <div className=\"tile-container\">\n                            <div className=\"center-text\">\n                                <h5>No Problems Uploaded</h5>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            )\n        } else if (this.state.data.length == 0 && this.state.data2.length) {\n            return (\n\n                <div className=\"container\">\n                    <a href=\"/uploadedissues\"><h4>Uploaded Issues</h4></a>\n                    <div className=\"container\">\n                        <div className=\"tile-container\">\n                            <div className=\"center-text\">\n                                <h5>No Issues Uploaded</h5>\n                            </div>\n                        </div>\n                    </div>\n                    <a href=\"/uploadedproblems\"><h4>Uploaded Problems</h4></a>\n                    <ul className=\"list-container\">\n                        {\n                            this.state.data2.map(i => {\n\n                                return (<li className=\"list-item\"><Link to={{\n                                    pathname: \"/subproblem\", data: i\n                                }}> <UpProbTile\n                                        title={i.problemHeading}\n                                        description={i.problemDescription}\n                                        name={i.creatorName}\n                                        score={0}\n                                        submissions={Object.keys(i.submissions).length}\n                                        pay={i.pay}\n                                    /></Link></li>\n                                );\n                            })\n                        }\n                    </ul>\n                </div>\n\n            )\n        }\n        else if (this.state.data.length === 0 && this.state.data2.length === 0) {\n            return (\n\n                <div className=\"container\">\n                    <a href=\"/uploadedissues\"><h4>Uploaded Issues</h4></a>\n                    <div className=\"container\">\n                        <div className=\"tile-container\">\n                            <div className=\"center-text\">\n                                <h5>No Issues Uploaded</h5>\n                            </div>\n                        </div>\n                    </div>\n                    <a href=\"/uploadedproblems\"><h4>Uploaded Problems</h4></a>\n                    <div className=\"tile-container\">\n                        <div className=\"center-text\">\n                            <h5>No Problems Uploaded</h5>\n                        </div>\n                    </div>\n                </div>\n\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(Uploaded);\n","import React, { Component } from 'react'\nimport UpIssueTile from '../../components/layout/UpIssueTile';\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\n\nclass UploadedIssues extends Component {\n    state = {\n        data: []\n    }\n    componentDidMount() {\n        // var axios = require('axios');\n        // axios.get(\"https://git-lance.firebaseapp.com/api/solve/bounty\").then((res) => {\n        //     var data = res.data.records;\n        //     this.setState({ data });\n        // })\n\n        var fetch = require('node-fetch');\n        const { auth } = this.props;\n\n        var options = {\n            method: 'POST',\n            url: 'https://git-lance.firebaseapp.com/api/upload/uploadedIssues',\n            headers:\n            {\n                'Postman-Token': '41582a4d-a65f-40d8-ac5d-ca27b473348d',\n                'cache-control': 'no-cache',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ userId: auth.uid }),\n            json: true\n        };\n\n        fetch(options.url, options).then((res) => res.json()).then((res) => {\n            var data = res.records;\n            this.setState({ data })\n        })\n\n    }\n\n\n\n    render() {\n        var recordsLength = this.state.data.length;\n\n        var rows = Math.ceil(recordsLength / 4);\n        var count = 0;\n        var rowMapping = [];\n        for (let i = 0; i < rows; i++) rowMapping.push(i);\n\n        var rowData = [];\n        var currRow = []\n        for (let i = 0; i < recordsLength; i++) {\n            if (i % 4 != 0 || i == 0) {\n                currRow.push(this.state.data[i]);\n            }\n            else {\n                rowData.push(currRow);\n                currRow = [];\n                currRow.push(this.state.data[i]);\n            }\n            if (i == recordsLength - 1) {\n                currRow.push(this.state.data[i]);\n                rowData.push(currRow);\n            }\n        }\n\n        if (this.state.data.length) {\n            return (\n                <div className=\"container\">\n                    <h4>Uploaded Issues</h4>\n                    {/* <div className=\"row\">\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                    </div> */}\n                    {\n                        rowMapping.map((outerValue, outerIndex) => {\n                            return (\n                                <div className=\"row\">\n                                    {\n                                        rowData[outerIndex].map(\n                                            (value, index) => {\n                                                return (\n                                                    <div className=\"col m3\">\n                                                        <Link to={{\n                                                            pathname: \"/subissue\", data: value\n                                                        }}> <UpIssueTile\n                                                                title={value.bountyName}\n                                                                name={value.creatorName}\n                                                                repo={value.Repo}\n                                                                pay={value.bountyValue}\n                                                            /></Link>\n                                                    </div>\n                                                )\n                                            }\n                                        )\n                                    }\n                                </div>\n\n                            )\n\n                        })\n                    }\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container\">\n                    <h4>Uploaded Issues</h4>\n                    {/* <div className=\"row\">\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                    </div> */}\n                    <div className=\"center-text\">\n                        <h5>No Issues Uploaded</h5>\n                    </div>\n                </div>\n            )\n        }\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(UploadedIssues)","import React, { Component } from 'react'\nimport UpProbTile from '../../components/layout/UpProbTile';\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\n\nclass UploadedProblems extends Component {\n    state = {\n        data: []\n    }\n    componentDidMount() {\n        // var axios = require('axios');\n        // axios.get(\"https://git-lance.firebaseapp.com/api/solve/problems\").then((res) => {\n        //     var data = res.data.records;\n        //     this.setState({ data });\n        // })\n\n        var fetch = require('node-fetch')\n\n        const { auth } = this.props;\n\n        var options = {\n            method: 'POST',\n            url: 'https://git-lance.firebaseapp.com/api/upload/uploadedProblems',\n            headers:\n            {\n                'Postman-Token': '90e98916-3334-4913-9fbf-8242fdd295d1',\n                'cache-control': 'no-cache',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ userId: auth.uid }),\n            json: true\n        };\n\n        fetch(options.url, options).then((res) => res.json()).then((res) => {\n            var data = res.records;\n            this.setState({ data })\n        })\n    }\n\n\n\n    render() {\n        var recordsLength = this.state.data.length;\n        var rows = Math.ceil(recordsLength / 4);\n        var count = 0;\n        var rowMapping = [];\n        for (let i = 0; i < rows; i++) rowMapping.push(i);\n\n        var rowData = [];\n        var currRow = []\n        for (let i = 0; i < recordsLength; i++) {\n            if (i % 4 != 0 || i == 0) {\n                currRow.push(this.state.data[i]);\n            }\n            else {\n                rowData.push(currRow);\n                currRow = [];\n                currRow.push(this.state.data[i]);\n            }\n            if (i == recordsLength - 1) {\n                currRow.push(this.state.data[i]);\n                rowData.push(currRow);\n            }\n        }\n\n        if (this.state.data.length) {\n            return (\n                <div className=\"container\">\n                    <h4>Uploaded Problems</h4>\n                    {/* <div className=\"row\">\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                    </div> */}\n                    {\n                        rowMapping.map((outerValue, outerIndex) => {\n                            return (\n                                <div className=\"row\">\n                                    {\n                                        rowData[outerIndex].map(\n                                            (value, index) => {\n                                                var scoreVal = \"no submissions\";\n                                                var currSubmissions = value.submissions;\n                                                var currBestSubmission = value.bestSubmissionId;\n                                                var submissionsVal = \"no submissions\";\n                                                if (Object.keys(currSubmissions).length) {\n                                                    submissionsVal = Object.keys(currSubmissions).length;\n                                                    scoreVal = currSubmissions[currBestSubmission].scores.total;\n                                                }\n\n                                                return (\n                                                    <div className=\"col m3\">\n                                                        <Link to={{\n                                                            pathname: \"/subproblem\", data: value\n                                                        }}> <UpProbTile\n                                                                title={value.problemHeading}\n                                                                description={value.problemDescription}\n                                                                name={value.creatorName}\n                                                                score={scoreVal}\n                                                                submissions={submissionsVal}\n                                                                pay={value.pay}\n                                                            /></Link>\n                                                    </div>\n                                                )\n                                            }\n                                        )\n                                    }\n                                </div>\n\n                            )\n\n                        })\n                    }\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container\">\n                    <h4>Uploaded Problems</h4>\n                    {/* <div className=\"row\">\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                    </div> */}\n                    <div className=\"center-text\">\n                        <h5>No Problems Uploaded</h5>\n                    </div>\n                </div>\n            )\n        }\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(UploadedProblems)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport history from '../../history'\nimport { Redirect } from 'react-router-dom'\n\nclass Buy extends Component {\n\n    handleBuy = () => {\n        var fetch = require(\"node-fetch\");\n        const { auth } = this.props;\n\n        var paymentDetails = {\n            from: auth.uid,\n            to: this.props.location.solverID,\n            amount: this.props.location.dataProblem.pay\n        }\n\n\n        var options = {\n            method: 'POST',\n            url: 'https://git-lance.firebaseapp.com/api/payment/makeTransaction',\n            headers:\n            {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(paymentDetails),\n            // {\n            //     from: 'DOlzbAFrTJOxn1tYzOdWVBUkT0a2',\n            //     to: 'gOQFfO6U0PXzVptg3M1ig7MBY2K3',\n            //     amount: '30'\n            // },\n            json: true\n        };\n        fetch(options.url, options).then(res => (res).json()).then(res => {\n            history.push('/uploaded')\n            window.location.reload()\n        });\n\n\n    }\n\n    handleReject = () => {\n        (\"Reject\")\n    }\n\n    render() {\n\n        if (!this.props.location.dataProblem || !this.props.location.dataSolver) return <Redirect to='/uploaded' />\n        return (\n            <div className=\"container\">\n                <div className=\"buy-pos\">\n                    <div className=\"card-panel card-border teal lighten-2 buy-card white-text center\">\n                        <h4>{this.props.location.dataProblem.problemHeading}</h4>\n                        <h5>{this.props.location.dataSolver.solverUserName}</h5>\n                        <h5>Amount: {this.props.location.dataProblem.pay}</h5>\n                        <div className=\"row\">\n                            <button onClick={this.handleReject} className=\"btn-floating btn-large left white\"><i className=\"material-icons red-text\">thumb_down</i></button>\n                            <button onClick={this.handleBuy} className=\"btn-floating btn-large right white\"><i className=\"material-icons green-text\">thumb_up</i></button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(Buy);","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nclass SubmittedIssue extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"card-panel teal card-border white-text\">\n                    <h4>{this.props.data.bountyName}</h4>\n                    <h5>{this.props.data.Repo}</h5>\n                    <h5>{this.props.answer}</h5>\n                </div>\n                <Link to={{ pathname: \"/buy\", data: this.props.data }}><button className=\"btn right\">Buy</button></Link>\n            </div>\n        )\n    }\n}\n\nexport default SubmittedIssue","import React, { Component } from 'react'\nimport SubmittedIssue from '../../components/layout/SubmittedIssue';\n\nclass IssueSubs extends Component {\n\n    render() {\n\n        return (\n            <SubmittedIssue\n                data={this.props.location.data}\n                answer=\"Lorem Ipsum\" />\n        )\n    }\n}\n\nexport default IssueSubs;","import React, { Component } from 'react';\nimport { Progress } from 'react-sweet-progress';\nimport \"react-sweet-progress/lib/style.css\";\n\nclass ProblemSubmitted extends Component {\n    render(props) {\n\n        return (\n            <div className=\"card-panel scorecard white-text\">\n                <div className=\"row\">\n                    <div className=\"col m7\">\n                        <div className=\"row\">\n                            <h4>{this.props.data.problemHeading}</h4>\n                            <div className=\"col m5\">\n                                <h5>Run Time</h5>\n                            </div>\n                            <div className=\"col m5\">\n                                <div className=\"progress-align\">\n                                    <Progress percent={this.props.data.scores.time} />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col m5\">\n                                <h5>Memory</h5>\n                            </div>\n                            <div className=\"col m5\">\n                                <div className=\"progress-align\">\n                                    <Progress percent={this.props.data.scores.memory} />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col m5\">\n                                <h5>Efficiency</h5>\n                            </div>\n                            <div className=\"col m5\">\n                                <div className=\"progress-align\">\n                                    <Progress percent={this.props.data.scores.efficiency} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col m5\">\n                        <h4>Overall Score</h4>\n                        <div className=\"circle-align\">\n                            <Progress\n                                type=\"circle\"\n                                percent={this.props.data.scores.total}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div >\n        )\n    }\n}\n\nexport default ProblemSubmitted;","import React, { Component } from 'react'\nimport ProblemSubmitted from '../../components/layout/ProblemSubmitted';\nimport { connect } from 'react-redux'\n\nclass SubmittedProblem extends Component {\n    constructor() {\n        super();\n        this.state = {\n            submissions: []\n        }\n    }\n\n    componentDidMount() {\n        var fetch = require(\"node-fetch\");\n\n        const { auth } = this.props;\n\n        var options = {\n            method: 'POST',\n            url: 'https://git-lance.firebaseapp.com/api/solve/selfProblemSubmission',\n            headers:\n            {\n                'Postman-Token': '49318d42-def5-43dc-8515-1c67eead447b',\n                'cache-control': 'no-cache',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ userId: auth.uid }),\n            json: true\n        };\n\n        fetch(options.url, options).then((res) => res.json()).then((res) => {\n            this.setState({ \"submissions\": res.records });\n\n        })\n    }\n    render() {\n        if (this.state.submissions.length) {\n            return (\n                <div className=\"container\">\n                    <h4>Submitted Problems</h4>\n                    {\n                        this.state.submissions.map(i => {\n                            return (\n                                <ProblemSubmitted\n                                    data={i}\n                                />\n                            )\n                        })}\n                </div>\n            )\n        }\n        else {\n            return (\n                <div className=\"container\">\n                    <h4>Submitted Problems</h4>\n                    <div className=\"center-text\">\n                        <h5>No Problems Submitted</h5>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(SubmittedProblem);","import React, { Component } from 'react'\n\nclass IssueSubmitted extends Component {\n    render(props) {\n\n        return (\n            <div className=\"container\">\n                <div className=\"card-panel teal card-border white-text\">\n                    <h4>{this.props.data.bountyName}</h4>\n                    <h5>Repo: {this.props.data.gitRepo}</h5>\n                    <h5>Answer: {this.props.data.answer}</h5>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default IssueSubmitted","import React, { Component } from 'react'\nimport IssueSubmitted from '../../components/layout/IssueSubmitted';\nimport { connect } from 'react-redux'\n\nclass SubmittedIssues extends Component {\n    constructor() {\n        super();\n        this.state = {\n            submissions: []\n        }\n    }\n    componentDidMount() {\n\n        const { auth } = this.props;\n        var fetch = require(\"node-fetch\");\n\n        var options = {\n            method: 'POST',\n            url: 'https://git-lance.firebaseapp.com/api/solve/selfIssueSubmission',\n            headers:\n            {\n                'Postman-Token': '7a568af7-e01c-4e29-853a-f40bd04c6cbd',\n                'cache-control': 'no-cache',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ userId: auth.uid }),\n            json: true\n        };\n\n        fetch(options.url, options).then((res) => res.json()).then((res) => {\n            this.setState({ \"submissions\": res.records });\n\n        })\n    }\n    render() {\n        if (this.state.submissions.length) {\n            return (\n                <div className=\"container\">\n                    <h4>Submitted Issues</h4>\n                    {\n                        this.state.submissions.map(i => {\n                            return (\n                                <IssueSubmitted data={i} />\n                            )\n                        })\n                    }\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container\">\n                    <h4>Submitted Issues</h4>\n                    <div className=\"center-text\">\n                        <h5>No Issues Submitted</h5>\n                    </div>\n                </div>\n            )\n        }\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(SubmittedIssues)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\nimport './App.css'\nimport './index.css';\nimport 'materialize-css';\nimport FeedSolve from './pages/solve/FeedSolve';\nimport Profile from './pages/aesthetics/Profile'\nimport Navbar from './components/layout/Navbar';\nimport * as serviceWorker from './serviceWorker';\nimport Landing from './pages/aesthetics/Landing';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport firebaseConfig from './config/firebaseConfig'\nimport Upload from './pages/uploads/Upload';\nimport history from './history'\nimport Problem from './pages/solve/Problem'\nimport Issues from './pages/solve/Issues';\nimport SolveIssues from './pages/workspace/SolveIssues';\nimport SolveProblem from './pages/workspace/SolveProblem';\nimport ProblemUp from './pages/subto/ProblemSubs';\nimport Uploaded from './pages/uploads/Uploaded';\nimport UploadedIssues from './pages/uploads/UploadedIssues';\nimport UploadedProblems from './pages/uploads/UploadedProblems';\nimport { Router, withRouter } from 'react-router';\nimport Buy from './pages/functional/Buy'\n\nimport IssueSubs from './pages/subto/IssueSubs';\nimport ProblemSubs from './pages/subto/ProblemSubs';\nimport SubmittedProblem from './pages/subby/SubmittedProblems';\nimport SubmittedIssues from './pages/subby/SubmittedIssues';\n\n\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reactReduxFirebase(firebaseConfig, { attachAuthIsReady: true }),\n        reduxFirestore(firebaseConfig)\n    )\n);\n\nclass Routing extends React.Component {\n    render() {\n        return (\n            <BrowserRouter history={history}>\n                <Navbar />\n                <div>\n                    <Switch>\n                        <Route exact path=\"/\" component={withRouter(Landing)} />\n                        <Route path=\"/issues\" component={withRouter(Issues)} />\n                        <Route path=\"/signin\" component={withRouter(SignIn)} />\n                        <Route path=\"/signup\" component={withRouter(SignUp)} />\n                        <Route path=\"/home\" component={withRouter(FeedSolve)} />\n                        <Route path=\"/profile\" component={withRouter(Profile)} />\n                        <Route path=\"/upload\" component={withRouter(Upload)} />\n                        <Route path=\"/problem\" component={withRouter(Problem)} />\n                        <Route path=\"/solissue\" component={withRouter(SolveIssues)} />\n                        <Route path=\"/solproblem\" component={withRouter(SolveProblem)} />\n                        <Route path=\"/subproblem\" component={withRouter(ProblemSubs)} />\n                        <Route path=\"/subissue\" component={withRouter(IssueSubs)} />\n                        <Route path=\"/uploaded\" component={withRouter(Uploaded)} />\n                        <Route path=\"/uploadedissues\" component={withRouter(UploadedIssues)} />\n                        <Route path=\"/uploadedproblems\" component={withRouter(UploadedProblems)} />\n                        <Route path=\"/issuesub\" component={withRouter(SubmittedIssues)} />\n                        <Route path=\"/problemsub\" component={withRouter(SubmittedProblem)} />\n                        <Route path=\"/buy\" component={withRouter(Buy)} />\n                    </Switch>\n                </div>\n            </BrowserRouter>\n        )\n    }\n}\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><Routing /></Provider>, document.getElementById('root'));\n})\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\n"],"sourceRoot":""}