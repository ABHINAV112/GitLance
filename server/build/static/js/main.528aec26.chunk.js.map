{"version":3,"sources":["components/layout/UpProbTile.js","components/layout/UpIssueTile.js","pages/solve/FeedSolve.js","pages/aesthetics/Profile.js","components/auth/LoggedInLinks.js","store/actions/authActions.js","components/auth/LoggedOutLinks.js","components/layout/Navbar.js","pages/aesthetics/Landing.js","components/auth/SignIn.js","components/auth/SignUp.js","store/reducers/authReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","history.js","components/layout/JobUploadForm.js","pages/uploads/Upload.js","pages/solve/Problem.js","pages/solve/Issues.js","components/layout/IssueSolution.js","pages/workspace/SolveIssues.js","components/layout/ProblemSolution.js","pages/workspace/SolveProblem.js","components/layout/ScoreCard.js","pages/subto/ProblemSubs.js","pages/uploads/Uploaded.js","pages/uploads/UploadedIssues.js","pages/uploads/UploadedProblems.js","pages/functional/Buy.js","components/layout/SubmittedIssue.js","pages/subto/IssueSubs.js","components/layout/ProblemSubmitted.js","pages/subby/SubmittedProblems.js","components/layout/IssueSubmitted.js","pages/subby/SubmittedIssues.js","pages/summary/FinalScores.js","index.js"],"names":["UpProbTile","props","className","this","title","style","fontSize","description","name","score","submissions","pay","Component","UpIssueTile","repo","FeedSolve","state","data","data2","options","auth","fetch","require","method","url","headers","body","JSON","stringify","userId","uid","json","then","res","records","setState","length","href","map","i","to","pathname","bountyName","creatorName","Repo","bountyValue","problemHeading","problemDescription","Object","keys","connect","firebase","Profile","LoggedInLinks","photoURL","trigger","balance","src","onClick","signOut","dispatch","getState","getFirebase","type","LoggedOutLinks","Navbar","money","links","Landing","window","location","SignIn","email","password","handleChange","e","target","id","value","handleSubmit","preventDefault","signIn","handleLogInWithGithub","signInWithGithub","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","provider","GithubAuthProvider","signInWithPopup","result","credential","accessToken","user","error","code","message","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","initState","authError","authReducer","action","rootReducer","combineReducers","firestore","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","projectId","createBrowserHistory","JobUploadForm","inputFile","outputFile","redirect","memoryLimit","timeLimit","inputString","outputString","onChangeHandler","files","uploadData","creatorId","displayName","read1","FileReader","readAsText","onloadend","read2","request","txtReg","search","setTimeout","response","history","push","reload","alert","Upload","Problem","recordsLength","rows","Math","ceil","rowMapping","rowData","currRow","outerValue","outerIndex","index","scoreVal","currSubmissions","currBestSubmission","bestSubmissionId","submissionsVal","scores","total","Issues","IssueSolution","answer","uploadedSol","gitUserName","gitRepoCreator","gitRepository","issueId","issue","solverId","solverUserName","SolveIssues","ProblemSolution","entrypoint","language","myCode","jsonData","makeScore","input","testCaseScore","calculateOutput","split","memory","time","efficiency","timeScore","round","memScore","convert","arr1","arr2","matches","clean","cleanStr","str","cleaned","charCodeAt","arr","cleanArr","m","parseInt","KB","MB","GB","B","solutionUpload","props2","output","formData","FormData","append","indexOf","get","actualOutput","console","log","jobId","Connection","Host","Accept","file","undefined","parse","localStorage","getItem","setItem","encType","SolveProblem","ScoreCard","dataProblem","dataSolver","percent","solverID","ProblemSubs","submissionKeys","Uploaded","UploadedIssues","UploadedProblems","Buy","handleBuy","paymentDetails","from","amount","handleReject","download","SubmittedIssue","IssueSubs","ProblemSubmitted","SubmittedProblem","IssueSubmitted","gitRepo","SubmittedIssues","FinalScores","store","createStore","compose","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","firebaseConfig","attachAuthIsReady","reduxFirestore","Routing","exact","path","component","withRouter","React","firebaseAuthIsReady","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.528aec26.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\n\nclass UpProbTile extends Component {\n    render(props) {\n        return (\n            <div className=\"container\">\n                <div className=\"card-panel pink darken-2 tile white-text card hoverable\">\n                    <h5>{this.props.title}</h5>\n                    <div className=\"description\">\n                        <h6>Description:</h6>\n                        <p style={{ fontSize: '13px' }}>{this.props.description}</p>\n                    </div>\n                    <div className=\"name\">\n                        <h6>Name: {this.props.name}</h6>\n                    </div>\n                    <div className=\"score\">\n                        <h6>Highest Score: {this.props.score}</h6>\n                    </div>\n                    <div className=\"submissions\">\n                        <h6>Number of Submissions: {this.props.submissions}</h6>\n                    </div>\n                    <h6>Pay: ${this.props.pay}</h6>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UpProbTile","import React, { Component } from 'react'\n\nclass UpIssueTile extends Component {\n    render(props) {\n        return (\n            <div className=\"container\">\n                <div className=\"card-panel teal tile white-text card hoverable\">\n                    <h5>{this.props.title}</h5>\n                    <div className=\"name\">\n                        <h6>Name: {this.props.name}</h6>\n                        {/* <p style={{ fontSize: '13px' }}>{this.props.description}</p> */}\n                    </div>\n                    <div className=\"repo\">\n                        <h6>Repo: {this.props.repo}</h6>\n                    </div>\n                    <div className=\"submissions\">\n                        <h6>Number of Submissions: {this.props.submissions}</h6>\n                    </div>\n                    <h6>Pay: ${this.props.pay}</h6>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UpIssueTile;","import React, { Component } from 'react';\nimport UpProbTile from '../../components/layout/UpProbTile';\nimport UpIssueTile from '../../components/layout/UpIssueTile';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\n\nclass FeedSolve extends Component {\n    state = {\n        data: [],\n        data2: []\n    }\n    componentDidMount() {\n        // axios.get(\"https://git-lance.firebaseapp.com/api/solve/bounty\").then((res) => {\n        //     var data = res.data.records;\n        //     this.setState({ data });\n        // })\n        // axios.get(\"https://git-lance.firebaseapp.com/api/solve/problems\").then((res) => {\n        //     var data2 = res.data.records;\n        //     this.setState({ data2 });\n        // })\n\n        const { auth } = this.props;\n\n        var fetch = require(\"node-fetch\");\n        var options = {\n            method: 'POST',\n            url: 'https://git-lance.firebaseapp.com/api/solve/bounty',\n            headers:\n            {\n                'Postman-Token': '6f722472-ad24-4388-be60-fad98c77d367',\n                'cache-control': 'no-cache',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ userId: auth.uid }),\n            json: true\n        };\n\n        fetch(options.url, options).then((res) => res.json()).then((res) => {\n            var data = res.records;\n            this.setState({ data })\n        })\n\n\n\n        var options = {\n            method: 'POST',\n            url: 'https://git-lance.firebaseapp.com/api/solve/problems',\n            headers:\n            {\n                'Postman-Token': 'db30edf6-fbd6-41ad-acc7-75417ebf0299',\n                'cache-control': 'no-cache',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ userId: auth.uid }),\n            json: true\n        };\n\n        fetch(options.url, options).then((res) => res.json()).then((res) => {\n            var data2 = res.records;\n            this.setState({ data2 })\n        })\n\n    }\n\n\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n        if (this.state.data.length && this.state.data2.length) {\n            return (\n                <div className=\"container\">\n                    <a href=\"/issues\"><h4> Issues</h4></a>\n                    <div className=\"tile-container\">\n                        <ul className=\"list-container\">\n                            {\n\n                                this.state.data.map(i => {\n                                    return (<li className=\"list-item\"><Link to={{ pathname: \"/solissue\", data: i }}>\n                                        <UpIssueTile\n                                            title={i.bountyName}\n                                            name={i.creatorName}\n                                            repo={i.Repo}\n                                            pay={i.bountyValue}\n                                        /></Link></li>\n                                    );\n                                })\n                            }\n                        </ul>\n                    </div>\n                    <a href=\"/problem\"><h4>Problems</h4></a>\n                    <div className=\"tile-container\">\n                        <ul className=\"list-container\">\n                            {\n                                this.state.data2.map(i => {\n\n                                    return (<li className=\"list-item\"><Link to={{\n                                        pathname: \"/solproblem\", data: i\n                                    }}> <UpProbTile\n                                            title={i.problemHeading}\n                                            description={i.problemDescription}\n                                            name={i.creatorName}\n                                            score={0}\n                                            submissions={Object.keys(i.submissions).length}\n                                            pay={i.pay}\n                                        /></Link></li>\n                                    );\n                                })\n                            }\n                        </ul>\n                    </div>\n                </div>\n\n            )\n        }\n        else if (this.state.data.length && this.state.data2.length === 0) {\n            return (\n                <div className=\"container\">\n                    <a href=\"/issues\"><h4> Issues</h4></a>\n                    <div className=\"tile-container\">\n                        <ul className=\"list-container\">\n                            {\n\n                                this.state.data.map(i => {\n                                    return (<li className=\"list-item\"><Link to={{ pathname: \"/solissue\", data: i }}>\n                                        <UpIssueTile\n                                            title={i.bountyName}\n                                            name={i.creatorName}\n                                            repo={i.Repo}\n                                            pay={i.bountyValue}\n                                        /></Link></li>\n                                    );\n                                })\n                            }\n                        </ul>\n                    </div>\n                    <a href=\"/problem\"><h4>Problems</h4></a>\n                    <div className=\"container\">\n                        <div className=\"tile-container\">\n                            <div className=\"center-text\">\n                                <h5>No Problems to Solve</h5>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n            )\n        }\n        else if (this.state.data.length === 0 && this.state.data2.length) {\n            return (\n                <div className=\"container\">\n                    <a href=\"/issues\"><h4> Issues</h4></a>\n                    <div className=\"container\">\n                        <div className=\"tile-container\">\n                            <div className=\"center-text\">\n                                <h5>No Issues to Solve</h5>\n                            </div>\n                        </div>\n                    </div>\n                    <a href=\"/problem\"><h4>Problems</h4></a>\n                    <div className=\"tile-container\">\n                        <ul className=\"list-container\">\n                            {\n                                this.state.data2.map(i => {\n\n                                    return (<li className=\"list-item\"><Link to={{\n                                        pathname: \"/solproblem\", data: i\n                                    }}> <UpProbTile\n                                            title={i.problemHeading}\n                                            description={i.problemDescription}\n                                            name={i.creatorName}\n                                            score={0}\n                                            submissions={Object.keys(i.submissions).length}\n                                            pay={i.pay}\n                                        /></Link></li>\n                                    );\n                                })\n                            }\n                        </ul>\n                    </div>\n                </div>\n            )\n        }\n        else {\n            return (\n                <div className=\"container\">\n                    <a href=\"/issues\"><h4> Issues</h4></a>\n                    <div className=\"container\">\n                        <div className=\"tile-container\">\n                            <div className=\"center-text\">\n                                <h5>No Issues to Solve</h5>\n                            </div>\n                        </div>\n                    </div>\n                    <a href=\"/problem\"><h4>Problems</h4></a>\n                    <div className=\"container\">\n                        <div className=\"tile-container\">\n                            <div className=\"center-text\">\n                                <h5>No Problems to Solve</h5>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(FeedSolve);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\nclass Profile extends Component {\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to=\"/\" />\n        return (\n            <div>\n                Coming Soon...\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(Profile)","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Dropdown, NavItem } from 'react-materialize'\nimport M from 'materialize-css'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nclass LoggedInLinks extends Component {\n    render(props) {\n        const { auth } = this.props;\n        if (auth.photoURL) {\n            return (\n                <ul className=\"right\">\n                    <li>\n                        <div>\n                            <Dropdown trigger={\n                                <a className=\"grey darken-3\">\n                                    <h6 className=\"nav-header left\">\n                                        Solve\n                                        </h6>\n                                    <i className=\"material-icons right\">arrow_drop_down</i>\n                                </a>\n                            }>\n                                <NavItem href=\"/home\">Feed</NavItem>\n                                <NavItem href=\"/issues\">Issues</NavItem>\n                                <NavItem href=\"/problem\">Problem</NavItem>\n                            </Dropdown>\n                        </div>\n                    </li>\n                    <li>\n                        <Dropdown trigger={\n                            <a className=\"grey darken-3\">\n                                <h6 className=\"nav-header left\">\n                                    Upload\n                                        </h6>\n                                <i className=\"material-icons right\">arrow_drop_down</i>\n                            </a>\n                        }>\n                            <NavItem href=\"/uploaded\">Feed</NavItem>\n                            <NavItem href=\"/upload\">New Job</NavItem>\n                            <NavItem href=\"/uploadedissues\">Issues</NavItem>\n                            <NavItem href=\"/uploadedproblems\">Problems</NavItem>\n                        </Dropdown>\n                    </li>\n                    <li>\n                        <Dropdown trigger={\n                            <a className=\"grey darken-3\">\n                                <h6 className=\"nav-header-pos left\">\n                                    Submissions\n                                        </h6>\n                                <i className=\"material-icons right\">arrow_drop_down</i>\n                            </a>\n                        }>\n                            <NavItem href=\"/issuesub\">Issues</NavItem>\n                            <NavItem href=\"/problemsub\">Problem</NavItem>\n                        </Dropdown>\n                    </li>\n                    <li>\n                        <h6 className=\"nav-pos-header\">Balance: ${this.props.balance}</h6>\n                    </li>\n                    <li>\n                        <Dropdown trigger={\n                            <h6><img src={auth.photoURL} className=\"btn-floating\" /></h6>\n                        }>\n                            <NavItem href=\"/profile\">My Profile</NavItem>\n                            <NavItem onClick={this.props.signOut}>Log Out</NavItem>\n                        </Dropdown>\n                    </li>\n                </ul>\n            )\n        }\n        else {\n            return (\n                <ul className=\"right\">\n                    <li>\n                        <div>\n                            <Dropdown trigger={\n                                <a className=\"grey darken-3\">\n                                    <h6 className=\"nav-header left\">\n                                        Solve\n                                        </h6>\n                                    <i className=\"material-icons right\">arrow_drop_down</i>\n                                </a>\n                            }>\n                                <NavItem href=\"/home\">Feed</NavItem>\n                                <NavItem href=\"/issues\">Issues</NavItem>\n                                <NavItem href=\"/problem\">Problem</NavItem>\n                            </Dropdown>\n                        </div>\n                    </li>\n                    <li>\n                        <Dropdown trigger={\n                            <a className=\"grey darken-3\">\n                                <h6 className=\"nav-header left\">\n                                    Upload\n                                        </h6>\n                                <i className=\"material-icons right\">arrow_drop_down</i>\n                            </a>\n                        }>\n                            <NavItem href=\"/uploaded\">Feed</NavItem>\n                            <NavItem href=\"/upload\">New Job</NavItem>\n                            <NavItem href=\"/uploadedissues\">Issues</NavItem>\n                            <NavItem href=\"/uploadedproblems\">Problems</NavItem>\n                        </Dropdown>\n                    </li>\n                    <li>\n                        <Dropdown trigger={\n                            <a className=\"grey darken-3\">\n                                <h6 className=\"nav-header left\">\n                                    Submissions\n                                        </h6>\n                                <i className=\"material-icons right\">arrow_drop_down</i>\n                            </a>\n                        }>\n                            <NavItem href=\"/issuesub\">Issues</NavItem>\n                            <NavItem href=\"/problemsub\">Problem</NavItem>\n                        </Dropdown>\n                    </li>\n                    <li>\n                        <Dropdown trigger={\n                            <img src=\"https://i0.wp.com/afa.org.sg/wordpress/wp-content/uploads/2014/05/icon-user-default-copy.png?ssl=1\" className=\"btn btn-floating\" />\n                        }>\n                            <NavItem href=\"/profile\">My Profile</NavItem>\n                            <NavItem onClick={this.props.signOut}>Log Out</NavItem>\n                        </Dropdown>\n                    </li>\n                </ul>\n            )\n        }\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoggedInLinks);","export const signIn = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: \"LOGIN_SUCCESS\" });\n        }).catch((err) => {\n            dispatch({ type: \"LOGIN_ERROR\", err })\n        });\n    }\n}\n\nexport const signInWithGithub = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n        var provider = new firebase.auth.GithubAuthProvider();\n\n        firebase.auth().signInWithPopup(provider).then(function (result) {\n            // This gives you a GitHub Access Token. You can use it to access the GitHub API.\n            var token = result.credential.accessToken;\n            // The signed-in user info.\n            var user = result.user;\n\n            // ...\n        }).catch(function (error) {\n            // Handle Errors here.\n\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            // The email of the user's account used.\n            var email = error.email;\n            // The firebase.auth.AuthCredential type that was used.\n            var credential = error.credential;\n            // ...\n        });\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: \"SIGNOUT_SUCCESS\" });\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' })\n        }).catch(err => {\n            dispatch({ type: 'SIGNUP_ERROR', err })\n        })\n    }\n}\n\n// .then((resp) => {\n//     return (\n//         firestore.collection('users').doc(resp.user.uid).set({\n//             firstName: newUser.firstName,\n//             lastName: newUser.lastName\n//         })\n//     )\n// })\n\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst LoggedOutLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li>\n                <div className=\"nav-element\">\n                    <NavLink to=\"/signup\"><h6>Sign Up</h6></NavLink>\n                </div>\n            </li>\n            <li>\n                <div className=\"nav-element\">\n                    <NavLink to=\"/signin\"><h6>Log In</h6></NavLink>\n                </div>\n            </li>\n        </ul>\n    )\n}\n\nexport default LoggedOutLinks","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport LoggedInLinks from '../auth/LoggedInLinks';\nimport LoggedOutLinks from '../auth/LoggedOutLinks';\nimport { connect } from 'react-redux';\n\n\nclass Navbar extends Component {\n    state = {\n        balance: \"\"\n    }\n    componentDidMount() {\n        var fetch = require(\"node-fetch\");\n\n        const { auth } = this.props;\n\n        var options = {\n            method: 'POST',\n            url: 'https://git-lance.firebaseapp.com/api/payment/checkBalance',\n            headers:\n            {\n                'Postman-Token': '26f87995-73a1-4979-a9e6-85e9e20d518e',\n                'cache-control': 'no-cache',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ userId: auth.uid }),\n            json: true\n        };\n\n        fetch(options.url, options).then(res => res.json()).then(res => {\n            this.setState({\n                balance: res.money\n            })\n        })\n\n    }\n    render(props) {\n        const { auth } = this.props\n        // (auth)\n        const links = auth.uid ? <LoggedInLinks balance={this.state.balance} /> : <LoggedOutLinks />\n        return (\n            <nav className=\"nav-wrapper grey darken-3\">\n                <div className=\"container\">\n                    <Link to='/home' className=\"brand-logo\">GitLance</Link>\n                    {links}\n                </div>\n            </nav>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\n\nclass Landing extends Component {\n    componentDidMount() {\n        window.location.href = \"https://git-lance-7c919.firebaseapp.com/\"\n    }\n    render() {\n        const { auth } = this.props;\n        if (auth.uid) return <Redirect to='/home' />\n        return (\n            <div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(Landing);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn, signInWithGithub } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n\n    handleLogInWithGithub = (e) => {\n        e.preventDefault();\n        this.props.signInWithGithub();\n    }\n\n\n    render() {\n        const { auth } = this.props\n        if (auth.uid) return <Redirect to='/home' />\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col m4\">\n                    </div>\n                    <div className=\"col m4\">\n                        <form onSubmit={this.handleSubmit} className=\"white\">\n                            <h5 className=\"grey-text text-darken-3\">\n                                Sign In\n                    </h5>\n                            <div className=\"input-field\">\n                                <label htmlFor=\"email\">Email</label>\n                                <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                            </div>\n                            <div className=\"input-field\">\n                                <label htmlFor=\"password\">Password</label>\n                                <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"input-field col m6\">\n                                    <button className=\"btn teal lighten-1 z-depth-0 center-align\">Login</button>\n                                </div>\n                                <div onClick={this.handleLogInWithGithub} className=\"input-field col m6\">\n                                    <button className=\"btn teal lighten-1 z-depth-0 center-align\">Github</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                    <div className=\"col m4\">\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds)),\n        signInWithGithub: () => dispatch(signInWithGithub())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        this.props.signUp(this.state)\n    }\n\n    render() {\n        const { auth } = this.props\n        if (auth.uid) return <Redirect to=\"/home\" />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">\n                        Sign Up\n                    </h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn teal lighten-1 z-depth-0\">Sign Up</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n\n            return {\n                ...state,\n                authError: 'Login Failed'\n            }\n        case 'LOGIN_SUCCESS':\n\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n\n            return state;\n        case 'SIGNUP_SUCCESS':\n\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state;\n    }\n    return state;\n}\n\nexport default authReducer;","import authReducer from './authReducer'\nimport { combineReducers } from 'redux'\nimport { firebaseReducer } from 'react-redux-firebase'\nimport { firestoreReducer } from 'redux-firestore'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDK3SCSl_LpVx5Fcac4PliMRIZA46E4zBs\",\n    authDomain: \"git-lance.firebaseapp.com\",\n    projectId: \"git-lance\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase","import { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory();","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport history from \"../../history\";\n\nvar redirect = false;\nclass JobUploadForm extends Component {\n  state = {\n    problemHeading: \"\",\n    problemDescription: \"\",\n    pay: \"\",\n    inputFile: \"\",\n    outputFile: \"\",\n    redirect: false,\n    memoryLimit: \"\",\n    timeLimit: \"\",\n    inputString: \"\",\n    outputString: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  onChangeHandler = e => {\n    this.setState({\n      [e.target.id]: e.target.files[0]\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { auth } = this.props;\n    var uploadData = this.state;\n    uploadData.creatorId = auth.uid;\n    uploadData.creatorName = auth.displayName;\n    var inputFile = this.state.inputFile;\n    var outputFile = this.state.outputFile;\n    var inputString;\n    var outputString;\n\n    var read1 = new FileReader();\n    read1.readAsText(inputFile);\n    read1.onloadend = () => {\n      inputString = read1.result;\n      uploadData.inputString = inputString;\n    };\n\n    var read2 = new FileReader();\n\n    read2.readAsText(outputFile);\n    read2.onloadend = () => {\n      outputString = read2.result;\n      uploadData.outputString = outputString;\n    };\n\n    var request = require(\"request\");\n    var options = {\n      method: \"POST\",\n      url: \"https://git-lance.firebaseapp.com/api/upload/uploadJob\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: uploadData,\n      json: true\n    };\n    var txtReg = /(.*?).txt/g;\n    var outRes = uploadData.outputFile.name.search(txtReg);\n    if (outRes === -1) {\n      alert(\"invalid output file!\");\n      return;\n    }\n    var inRes = uploadData.inputFile.name.search(txtReg);\n    if (inRes === -1) {\n      alert(\"invalid input file!\");\n      return;\n    }\n    setTimeout(function() {\n      request(options, function(error, response, body) {\n        history.push(\"/home\");\n        window.location.reload();\n      });\n    }, 5000);\n  };\n\n  render(state) {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n    // if (redirect) {\n    //     (\"gonna redirect biatchh\");\n    //     return <Redirect to='/home' />\n    // }\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Job Upload Form</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"problemHeading\">Problem Heading</label>\n            <input\n              type=\"text\"\n              id=\"problemHeading\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"problemDescription\">Problem Description</label>\n            <input\n              type=\"text\"\n              id=\"problemDescription\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"pay\">Pay</label>\n            <input type=\"number\" id=\"pay\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"memoryLimit\">Memory in Bytes</label>\n            <input\n              type=\"number\"\n              id=\"memoryLimit\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"timeLimit\">Time in Microseconds</label>\n            <input type=\"number\" id=\"timeLimit\" onChange={this.handleChange} />\n          </div>\n          <div className=\"row\">\n            <div className=\"input-field col m6\">\n              <h6 className=\"grey-text lighten-3\">Input Test File</h6>\n              <input\n                type=\"file\"\n                id=\"inputFile\"\n                onChange={this.onChangeHandler}\n              />\n            </div>\n            <div className=\"input-field col m6\">\n              <h6 className=\"grey-text lighten-3\">Output Test File</h6>\n              <input\n                type=\"file\"\n                id=\"outputFile\"\n                onChange={this.onChangeHandler}\n              />\n            </div>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn teal lighten-1 z-depth-0 center-align\">\n              Upload Job\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nexport default connect(mapStateToProps)(JobUploadForm);\n","import React, { Component } from 'react'\nimport JobUploadForm from '../../components/layout/JobUploadForm';\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\nclass Upload extends Component {\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to=\"/signin\" />\n        return (\n            <JobUploadForm />\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(Upload);","import React, { Component } from 'react'\nimport UpProbTile from '../../components/layout/UpProbTile';\nimport { connect } from 'react-redux'\nimport { Link, Redirect } from 'react-router-dom'\n\n\nclass Problem extends Component {\n    state = {\n        data: []\n    }\n    componentDidMount() {\n        // var axios = require('axios');\n        // axios.get(\"https://git-lance.firebaseapp.com/api/solve/problems\").then((res) => {\n        //     var data = res.data.records;\n        //     this.setState({ data });\n        // })\n\n        const { auth } = this.props\n\n        var fetch = require('node-fetch');\n\n        var options = {\n            method: 'POST',\n            url: 'https://git-lance.firebaseapp.com/api/solve/problems',\n            headers:\n            {\n                'Postman-Token': 'db30edf6-fbd6-41ad-acc7-75417ebf0299',\n                'cache-control': 'no-cache',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ userId: auth.uid }),\n            json: true\n        };\n\n        fetch(options.url, options).then((res) => res.json()).then((res) => {\n            var data = res.records;\n            this.setState({ data })\n        })\n\n    }\n\n\n\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n        var recordsLength = this.state.data.length;\n\n        var rows = Math.ceil(recordsLength / 4);\n        var count = 0;\n        var rowMapping = [];\n        for (let i = 0; i < rows; i++) rowMapping.push(i);\n\n        var rowData = [];\n        var currRow = []\n        for (let i = 0; i < recordsLength; i++) {\n            if (i % 4 != 0 || i == 0) {\n                currRow.push(this.state.data[i]);\n            }\n            else {\n                rowData.push(currRow);\n                currRow = [];\n                currRow.push(this.state.data[i]);\n            }\n            if (i == recordsLength - 1) {\n                currRow.push(this.state.data[i]);\n                rowData.push(currRow);\n            }\n        }\n\n        if (this.state.data.length) {\n            return (\n                <div className=\"container\">\n                    <h4>Problems</h4>\n                    {/* <div className=\"row\">\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                    </div> */}\n                    {\n                        rowMapping.map((outerValue, outerIndex) => {\n                            return (\n                                <div className=\"row\">\n                                    {\n                                        rowData[outerIndex].map(\n                                            (value, index) => {\n                                                var scoreVal = \"no submissions\";\n                                                var currSubmissions = value.submissions;\n                                                var currBestSubmission = value.bestSubmissionId;\n                                                var submissionsVal = \"no submissions\";\n                                                if (Object.keys(currSubmissions).length) {\n                                                    submissionsVal = Object.keys(currSubmissions).length;\n                                                    scoreVal = currSubmissions[currBestSubmission].scores.total;\n                                                }\n                                                return (\n                                                    <div className=\"col m3\">\n                                                        <Link to={{ pathname: \"/solproblem\", data: value }}><UpProbTile\n                                                            title={value.problemHeading}\n                                                            description={value.problemDescription}\n                                                            name={value.creatorName}\n                                                            score={scoreVal}\n                                                            submissions={submissionsVal}\n                                                            pay={value.pay}\n                                                        /></Link>\n                                                    </div>\n                                                )\n                                            }\n                                        )\n                                    }\n                                </div>\n\n                            )\n\n                        })\n                    }\n                </div>\n            )\n        }\n        else {\n            return (\n                <div className=\"container\">\n                    <h4>Problems</h4>\n                    {/* <div className=\"row\">\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                    </div> */}\n\n                    <div className=\"row\">\n                        <div className=\"center-text\">\n                            <h5>No Problems to Solve</h5>\n                        </div>\n                    </div>\n\n\n\n\n                </div>\n            )\n        }\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(Problem)","import React, { Component } from 'react'\nimport UpIssueTile from '../../components/layout/UpIssueTile';\nimport { connect } from 'react-redux'\nimport { Link, Redirect } from 'react-router-dom'\n\n\nclass Issues extends Component {\n    state = {\n        data: []\n    }\n    componentDidMount() {\n        // var axios = require('axios');\n        // axios.get(\"https://git-lance.firebaseapp.com/api/solve/bounty\").then((res) => {\n        //     var data = res.data.records;\n        //     this.setState({ data });\n        // })\n\n        const { auth } = this.props;\n\n        var fetch = require('node-fetch');\n\n        var options = {\n            method: 'POST',\n            url: 'https://git-lance.firebaseapp.com/api/solve/bounty',\n            headers:\n            {\n                'Postman-Token': '6f722472-ad24-4388-be60-fad98c77d367',\n                'cache-control': 'no-cache',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ userId: auth.uid }),\n            json: true\n        };\n\n        fetch(options.url, options).then((res) => res.json()).then((res) => {\n            var data = res.records;\n            this.setState({ data })\n        })\n\n    }\n\n\n\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n\n        var recordsLength = this.state.data.length;\n\n        var rows = Math.ceil(recordsLength / 4);\n        var count = 0;\n        var rowMapping = [];\n        for (let i = 0; i < rows; i++) rowMapping.push(i);\n\n        var rowData = [];\n        var currRow = []\n        for (let i = 0; i < recordsLength; i++) {\n            if (i % 4 != 0 || i == 0) {\n                currRow.push(this.state.data[i]);\n            }\n            else {\n                rowData.push(currRow);\n                currRow = [];\n                currRow.push(this.state.data[i]);\n            }\n            if (i == recordsLength - 1) {\n                currRow.push(this.state.data[i]);\n                rowData.push(currRow);\n            }\n        }\n\n        if (this.state.data.length) {\n            return (\n                <div className=\"container\">\n                    <h4>Issues</h4>\n                    {/* <div className=\"row\">\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                    </div> */}\n                    {\n                        rowMapping.map((outerValue, outerIndex) => {\n                            return (\n                                <div className=\"row\">\n                                    {\n                                        rowData[outerIndex].map(\n                                            (value, index) => {\n                                                return (\n                                                    <div className=\"col m3\">\n                                                        <Link to={{ pathname: \"/solissue\", data: value }} > <UpIssueTile\n                                                            title={value.bountyName}\n                                                            name={value.creatorName}\n                                                            repo={value.Repo}\n                                                            pay={value.bountyValue}\n                                                        /> </Link>\n                                                    </div>\n                                                )\n                                            }\n                                        )\n                                    }\n                                </div>\n\n                            )\n\n                        })\n                    }\n                </div>\n            )\n        }\n        else {\n            return (\n                <div className=\"container\">\n                    <h4>Issues</h4>\n                    {/* <div className=\"row\">\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                    </div> */}\n                    <div className=\"center-text\">\n                        <h5>No Issues to Solve</h5>\n                    </div>\n                </div>\n            )\n        }\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(Issues)","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport history from '../../history';\nclass IssueSolution extends Component {\n\n    state = {\n        answer: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n\n    }\n\n    handleSubmit = (e) => {\n        const { auth } = this.props;\n\n        var uploadedSol = {\n            gitUserName: this.props.data.gitRepoCreator,\n            gitRepository: this.props.data.Repo,\n            issueId: this.props.data.issue,\n            solverId: auth.uid,\n            solverUserName: auth.displayName,\n            answer: this.state.answer\n        }\n        var fetch = require(\"node-fetch\");\n\n        var options = {\n            method: 'POST',\n            url: 'https://git-lance.firebaseapp.com/api/solve/submission/issue',\n            headers:\n            {\n                'Postman-Token': 'b021c797-c6df-434f-8184-193dc71ccacd',\n                'cache-control': 'no-cache',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(uploadedSol),\n            // {\n            //     gitUserName: 'Arcadier',\n            //     gitRepository: 'Developer-Community-Support',\n            //     issueId: 'issue_6',\n            //     solverId: 'solverI1',\n            //     solverUserName: 'solver1',\n            //     answer: 'please dddon\\'t npm i ------g thanos.js'\n            // }\n            json: true\n        };\n        fetch(options.url, options).then(() => {\n            history.push('/home')\n            window.location.reload()\n        })\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"card-panel card-border teal lighten-2 white-text issuesol\">\n                    <div className=\"row\">\n                        <div className=\"col m4\">\n                            <h3>Issue: </h3>\n                            <div className=\"issue-desc\">\n                                <h5>{this.props.data.bountyName}</h5>\n                            </div>\n                            <h4>Repo: </h4>\n                            <h5>{this.props.data.Repo}</h5>\n                        </div>\n                        <div className=\"col m8\">\n                            <div>\n                                <textarea className=\"white card-border textsol\" id=\"answer\" onChange={this.handleChange}>\n                                </textarea>\n                            </div>\n                            <button className=\"right btn card-border red\" onClick={this.handleSubmit}>Submit</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(IssueSolution);","import React, { Component } from 'react'\nimport IssueSolution from '../../components/layout/IssueSolution';\n\nclass SolveIssues extends Component {\n    componentDidMount() {\n\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                <IssueSolution\n                    data={this.props.location.data}\n                />\n            </div>\n        )\n    }\n}\n\nexport default SolveIssues;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport history from \"../../history\";\nvar $ = require(\"jquery\");\nclass ProblemSolution extends Component {\n    state = {\n        entrypoint: \"\",\n        language: \"\",\n        myCode: \"\",\n        jsonData: \"\"\n    };\n    constructor(props) {\n        super(props);\n        console.log(\"constructor ran\");\n        if (props.data == undefined) {\n            this.props2 = JSON.parse(localStorage.getItem(\"solutionData\"));\n            console.log(\"if ran\");\n        } else {\n            localStorage.setItem(\"solutionData\", JSON.stringify(this.props));\n            this.props2 = this.props;\n            console.log(\"else ran\");\n        }\n    }\n    handleChange = e => {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    };\n\n    onChangeHandler = e => {\n        this.setState({\n            [e.target.id]: e.target.files[0]\n        });\n    };\n\n    makeScore = (input, response) => {\n        var testCaseScore = this.calculateOutput(\n            input[\"output\"].split(\"\\n\"),\n            response[\"stdout\"].split(\"\\n\")\n        );\n        if (testCaseScore == 0) {\n            return {\n                memory: 0,\n                time: 0,\n                efficiency: 0,\n                total: 0\n            };\n        }\n        var timeScore = Math.round(\n            (1 - response[\"timeTaken\"] / input[\"time\"]) * 100\n        );\n        if (timeScore < 0) {\n            timeScore = 0;\n        }\n        var memScore = Math.round(\n            (1 - this.convert(response[\"memory\"]) / input[\"memory\"]) * 100\n        );\n        if (memScore < 0) {\n            memScore = 0;\n        }\n        return {\n            memory: memScore,\n            time: timeScore,\n            efficiency: testCaseScore,\n            total: Math.round((memScore + timeScore + testCaseScore) / 3)\n        };\n    };\n\n    calculateOutput = (arr1, arr2) => {\n        // console.log(arr1, arr2);\n        var matches = 0;\n        arr1 = this.clean(arr1);\n        arr2 = this.clean(arr2);\n        // console.log(arr1, arr2);\n        if (arr1.length == 0) {\n            return 0;\n        }\n        for (var i = 0; i < arr1.length; i++) {\n            if (arr2[i]) {\n                // console.log(arr1[i] == arr2[i]);\n                var str1 = this.cleanStr(arr1[i]);\n                var str2 = this.cleanStr(arr2[i]);\n                // console.log(str1.length, str2.length);\n                // console.log(str1, str2);\n                // console.log(str1 == str2);\n                // for (var j = 0; j < arr1[i].length; j++) {\n                //   console.log(arr1[i].charCodeAt(j), arr2[i][j]);\n                //   //   console.log(arr1[i] == \"\");\n                // }\n                if (str1 == str2) {\n                    matches += 1;\n                }\n            }\n        }\n        return Math.round((matches / arr1.length) * 100);\n    };\n    cleanStr = str => {\n        var cleaned = \"\";\n        for (var i = 0; i < str.length; i++) {\n            if (str[i].charCodeAt(0) != 13) {\n                cleaned += str[i];\n            }\n        }\n        return cleaned;\n    };\n    clean = arr => {\n        var cleanArr = [];\n        for (var i = 0; i < arr.length; i++) {\n            if (arr[i] != \"\") {\n                cleanArr.push(arr[i]);\n            }\n        }\n        return cleanArr;\n    };\n\n    convert = memory => {\n        var m = memory.split(\" \");\n        var num = parseInt(m[0]);\n        var unit = m[1];\n\n        var conv = { KB: 1024, MB: 1048576, GB: 1073741, B: 1 };\n        var converted = num * conv[unit];\n        return converted;\n    };\n\n    handleSubmit = e => {\n        const { auth } = this.props2;\n        var fetch = require(\"node-fetch\");\n        // var input = {\n        //     output: this.props2.data.outputString,\n        //     memory: this.props2.data.memoryLimit,\n        //     time: this.props2.data.timeLimit\n        // }\n\n        var input = {\n            output: this.props2.data.outputString,\n            memory: this.props2.data.memoryLimit,\n            time: this.props2.data.timeLimit\n        };\n\n        var solutionUpload;\n\n        e.preventDefault();\n        var formData = new FormData(e.target);\n        // formData.append(\"entrypoint\", this.state.entrypoint);\n        // formData.append(\"language\", this.state.language);\n        // formData.append(\"myCode\", this.state.myCode);\n        // // formData.append(\"\",this.props2.inputString);\n        formData.append(\"input_text\", this.props2.data.inputString);\n        // const config = {\n        //     headers: { 'content-type': 'multipart/form-data' }\n        // }\n\n        var possibleLang = [\"python\", \"C\", \"C++\", \"java\"];\n        if (possibleLang.indexOf(formData.get(\"language\")) == -1) {\n            alert(\"Please enter a valid language\");\n            return;\n        } else if (formData.get(\"entrypoint\") == \"\") {\n            alert(\"Please enter an entry point\");\n            return;\n        } else if (formData.get(\"myCode\").name.indexOf(\".zip\") == -1) {\n            alert(\"Please upload a zip file!\");\n            return;\n        }\n        var output = {\n            output: \"\",\n            actualOutput: input.output\n        };\n        // var formData = $(e.target).serialize();\n        console.log(...formData);\n        var URL =\n            \"http://compiler-env.i3hveummcp.ap-southeast-1.elasticbeanstalk.com/compile\";\n        var options = {\n            method: \"POST\",\n            body: formData\n        };\n\n        var request = require(\"request\");\n        fetch(URL, options)\n            .then(res => res.json())\n            .then(json => {\n                // console.log(json);\n                solutionUpload = {\n                    creatorId: this.props2.data.creatorId,\n                    jobId: this.props2.data.jobId,\n                    solverId: auth.uid,\n                    solverUserName: auth.displayName\n                };\n                // console.log(Object.keys(json));\n                if (json[\"stdout\"]) {\n                    solutionUpload.scores = this.makeScore(input, json);\n                    output[\"output\"] = json[\"stdout\"];\n                } else {\n                    solutionUpload.scores = {\n                        memory: 0,\n                        time: 0,\n                        efficiency: 0\n                    };\n                    output[\"output\"] = json[\"error\"];\n                }\n\n                var options = {\n                    method: \"POST\",\n                    url:\n                        \"https://git-lance.firebaseapp.com/api/solve/submission/problem\",\n                    headers: {\n                        \"cache-control\": \"no-cache\",\n                        Connection: \"keep-alive\",\n                        \"Content-Length\": \"240\",\n                        \"Accept-Encoding\": \"gzip, deflate\",\n                        Host: \"git-lance.firebaseapp.com\",\n                        \"Postman-Token\":\n                            \"04d1ca07-a2a5-4890-897f-f24548833e48,bcb07d68-5403-481e-b6af-caeda39a7ff6\",\n                        \"Cache-Control\": \"no-cache\",\n                        Accept: \"*/*\",\n                        \"User-Agent\": \"PostmanRuntime/7.16.3\",\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: solutionUpload,\n                    json: true\n                };\n                console.log(solutionUpload.scores);\n                request(options, function(error, response, body) {\n                    if (body === \"success\") {\n                        setTimeout(function() {\n                            history.push({\n                                pathname: \"/scorecard\",\n                                state: {\n                                    scores: solutionUpload.scores,\n                                    file: output\n                                }\n                            });\n                            window.location.reload();\n                        }, 3000);\n                    }\n                });\n            });\n    };\n\n    render(props) {\n        return (\n            <div className=\"card-panel card-border red lighten-2 white-text\">\n                <div className=\"row\">\n                    <h4>{this.props2.data.problemHeading}</h4>\n                    <h5>Pay: ${this.props2.data.pay}</h5>\n                    <div className=\"row\">\n                        <div className=\"col m4\">\n                            <h5>Description:</h5>\n                        </div>\n                        <div className=\"col m8\">\n                            <h6>{this.props2.data.problemDescription}</h6>\n                        </div>\n                    </div>\n                    <form\n                        onSubmit={this.handleSubmit}\n                        method=\"post\"\n                        encType=\"multipart/form-data\"\n                    >\n                        <div className=\"input-field\">\n                            <label className=\"white-text\" htmlFor=\"entrypoint\">\n                                Enter entrypoint\n                            </label>\n                            <input\n                                type=\"text\"\n                                id=\"entrypoint\"\n                                name=\"entrypoint\"\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                        <div>\n                            <label className=\"white-text\" htmlFor=\"language\">\n                                Enter language (python, C, C++, java)\n                            </label>\n                            {/* <select name=\"language\" id=\"language\" onChange={this.handleChange}>\n                                <option value=\"python\">Python</option>\n                                <option value=\"C\">C</option>\n                                <option value=\"C++\">C++</option>\n                                <option value=\"java\">Java</option>\n                            </select> */}\n                            <input\n                                type=\"text\"\n                                id=\"language\"\n                                name=\"language\"\n                                onChange={this.handleChange}\n                            />\n                        </div>\n\n                        <div className=\"input-field col m6\">\n                            <h6 className=\"white-text\">Input your code here</h6>\n                            <input\n                                type=\"file\"\n                                id=\"myCode\"\n                                name=\"myCode\"\n                                onChange={this.onChangeHandler}\n                            />\n                        </div>\n                        <div className=\"input-field btn-pos-cor\">\n                            <button className=\"btn teal lighten-1 z-depth-0 right\">\n                                Upload Solution\n                            </button>\n                        </div>\n                    </form>\n                </div>\n                {/* <div className=\"col m5\">\n                        <div className=\"container\">\n\n                            <div className=\"card-panel card-border code-up card-overflow\">\n                                <i className=\"material-icons grey-text large center-align icon-pos\">cloud_upload</i>\n                                <h6 className=\"grey-text\">Upload a ZIP of your Files</h6>\n                                <div className=\"button-pos\">\n                                    \n                                </div>\n                            </div>\n                        </div>\n                    </div> */}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        auth: state.firebase.auth\n    };\n};\n\nexport default connect(mapStateToProps)(ProblemSolution);\n","import React, { Component } from 'react'\nimport ProblemSolution from '../../components/layout/ProblemSolution';\n\nclass SolveProblem extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <ProblemSolution\n                    data={this.props.location.data}\n                />\n            </div>\n        )\n    }\n}\n\nexport default SolveProblem;","import React, { Component } from 'react';\nimport { Progress } from 'react-sweet-progress';\nimport \"react-sweet-progress/lib/style.css\";\nimport { Link } from 'react-router-dom'\n\nclass ScoreCard extends Component {\n    render(props) {\n\n        return (\n            <div className=\"card-panel scorecard white-text\">\n                <div className=\"row\">\n                    <div className=\"col m7\">\n                        <div className=\"row\">\n                            <h4>{this.props.dataProblem.data.problemHeading}</h4>\n                            <h5>{this.props.dataSolver.solverUserName}</h5>\n                            <div className=\"col m5\">\n                                <h5>Run Time</h5>\n                            </div>\n                            <div className=\"col m5\">\n                                <div className=\"progress-align\">\n                                    <Progress percent={this.props.dataSolver.scores.time % 101} />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col m5\">\n                                <h5>Memory</h5>\n                            </div>\n                            <div className=\"col m5\">\n                                <div className=\"progress-align\">\n                                    <Progress percent={this.props.dataSolver.scores.memory % 101} />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col m5\">\n                                <h5>Efficiency</h5>\n                            </div>\n                            <div className=\"col m5\">\n                                <div className=\"progress-align\">\n                                    <Progress percent={this.props.dataSolver.scores.efficiency % 101} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col m5\">\n                        <h4>Overall Score</h4>\n                        <div className=\"circle-align\">\n                            <Progress\n                                type=\"circle\"\n                                percent={this.props.dataSolver.scores.total % 101}\n                            />\n                        </div>\n                        <Link to={{ pathname: \"/buy\", dataSolver: this.props.dataSolver, dataProblem: this.props.dataProblem.data, solverID: this.props.solverID }}><button className=\"waves-effect waves-light btn right\">Buy</button></Link>\n                    </div>\n                </div>\n            </div >\n        )\n    }\n}\n\nexport default ScoreCard;","import React, { Component } from 'react'\nimport ScoreCard from '../../components/layout/ScoreCard';\nimport { connect } from 'react-redux'\n\n// this is where we will have all problems uploaded by user\nclass ProblemSubs extends Component {\n    constructor() {\n        super();\n        this.state = {\n            submissions: [],\n            submissionKeys: []\n        }\n    }\n\n    componentDidMount() {\n        var fetch = require(\"node-fetch\");\n\n        const { auth } = this.props;\n\n        console.log(this.props)\n\n        var options = {\n            method: 'POST',\n            url: 'https://git-lance.firebaseapp.com/api/upload/jobSubmission',\n            headers:\n            {\n                'cache-control': 'no-cache',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ userId: auth.uid, jobId: this.props.location.data.jobId }),\n            json: true\n        };\n        {/*this.props.location.data.jobId*/ }\n        fetch(options.url, options).then((res) => res.json()).then((res) => { this.setState({ \"submissions\": res.submissions }); this.setState({ \"submissionKeys\": Object.keys(res.submissions) }); })\n    }\n    render() {\n        console.log(this.props.location.data.jobId)\n        return (\n            <div className=\"container\">\n                {\n                    this.state.submissionKeys.map((value) => {\n                        return (<ScoreCard\n                            // title={this.state.submissions[value].solverUserName}\n                            // runtime={this.state.submissions[value].scores.time % 101}\n                            // memory={this.state.submissions[value].scores.memory % 101}\n                            // efficiency={this.state.submissions[value].scores.efficiency % 101}\n                            // overall={this.state.submissions[value].scores.total % 101}\n                            dataSolver={this.state.submissions[value]}\n                            dataProblem={this.props.location}\n                            solverID={value}\n                        />)\n                    })\n\n                }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(ProblemSubs);","import React, { Component } from 'react';\nimport UpProbTile from '../../components/layout/UpProbTile';\nimport UpIssueTile from '../../components/layout/UpIssueTile';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\n\nclass Uploaded extends Component {\n    state = {\n        data: [],\n        data2: []\n    }\n    componentDidMount() {\n        // axios.get(\"https://git-lance.firebaseapp.com/api/solve/bounty\").then((res) => {\n        //     var data = res.data.records;\n        //     this.setState({ data });\n        // })\n        // axios.get(\"https://git-lance.firebaseapp.com/api/solve/problems\").then((res) => {\n        //     var data2 = res.data.records;\n        //     this.setState({ data2 });\n        // })\n\n        const { auth } = this.props;\n\n        var fetch = require(\"node-fetch\");\n\n        var options = {\n            method: 'POST',\n            url: 'https://git-lance.firebaseapp.com/api/upload/uploadedIssues',\n            headers:\n            {\n                'Postman-Token': '41582a4d-a65f-40d8-ac5d-ca27b473348d',\n                'cache-control': 'no-cache',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ userId: auth.uid }),\n            json: true\n        };\n\n        fetch(options.url, options).then((res) => res.json()).then((res) => {\n            var data = res.records;\n            this.setState({ data })\n        })\n\n        var options = {\n            method: 'POST',\n            url: 'https://git-lance.firebaseapp.com/api/upload/uploadedProblems',\n            headers:\n            {\n                'Postman-Token': '90e98916-3334-4913-9fbf-8242fdd295d1',\n                'cache-control': 'no-cache',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ userId: auth.uid }),\n            json: true\n        };\n\n        fetch(options.url, options).then((res) => res.json()).then((res) => {\n            var data2 = res.records;\n            this.setState({ data2 })\n        })\n\n    }\n\n\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n        if (this.state.data.length && this.state.data2.length) {\n            return (\n\n                <div className=\"container\">\n                    <a href=\"/uploadedissues\"><h4>Uploaded Issues</h4></a>\n                    <ul className=\"list-container\">\n                        {\n                            this.state.data.map(i => {\n                                return (<li className=\"list-item\"><Link to={{ pathname: \"/subissue\", data: i }}>\n                                    <UpIssueTile\n                                        title={i.bountyName}\n                                        name={i.creatorName}\n                                        repo={i.Repo}\n                                        pay={i.bountyValue}\n                                    /></Link></li>\n                                );\n                            })\n                        }\n                    </ul>\n                    <a href=\"/uploadedproblems\"><h4>Uploaded Problems</h4></a>\n                    <ul className=\"list-container\">\n                        {\n                            this.state.data2.map(i => {\n\n                                return (<li className=\"list-item\"><Link to={{\n                                    pathname: \"/subproblem\", data: i\n                                }}> <UpProbTile\n                                        title={i.problemHeading}\n                                        description={i.problemDescription}\n                                        name={i.creatorName}\n                                        score={0}\n                                        submissions={Object.keys(i.submissions).length}\n                                        pay={i.pay}\n                                    /></Link></li>\n                                );\n                            })\n                        }\n                    </ul>\n                </div>\n\n            )\n        } else if (this.state.data.length && this.state.data2.length == 0) {\n            return (\n\n                <div className=\"container\">\n                    <a href=\"/uploadedissues\"><h4>Uploaded Issues</h4></a>\n                    <ul className=\"list-container\">\n                        {\n                            this.state.data.map(i => {\n                                return (<li className=\"list-item\"><Link to={{ pathname: \"/subissue\", data: i }}>\n                                    <UpIssueTile\n                                        title={i.bountyName}\n                                        name={i.creatorName}\n                                        repo={i.Repo}\n                                        pay={i.bountyValue}\n                                    /></Link></li>\n                                );\n                            })\n                        }\n                    </ul>\n                    <a href=\"/uploadedproblems\"><h4>Uploaded Problems</h4></a>\n                    <div className=\"container\">\n                        <div className=\"tile-container\">\n                            <div className=\"center-text\">\n                                <h5>No Problems Uploaded</h5>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            )\n        } else if (this.state.data.length == 0 && this.state.data2.length) {\n            return (\n\n                <div className=\"container\">\n                    <a href=\"/uploadedissues\"><h4>Uploaded Issues</h4></a>\n                    <div className=\"container\">\n                        <div className=\"tile-container\">\n                            <div className=\"center-text\">\n                                <h5>No Issues Uploaded</h5>\n                            </div>\n                        </div>\n                    </div>\n                    <a href=\"/uploadedproblems\"><h4>Uploaded Problems</h4></a>\n                    <ul className=\"list-container\">\n                        {\n                            this.state.data2.map(i => {\n\n                                return (<li className=\"list-item\"><Link to={{\n                                    pathname: \"/subproblem\", data: i\n                                }}> <UpProbTile\n                                        title={i.problemHeading}\n                                        description={i.problemDescription}\n                                        name={i.creatorName}\n                                        score={0}\n                                        submissions={Object.keys(i.submissions).length}\n                                        pay={i.pay}\n                                    /></Link></li>\n                                );\n                            })\n                        }\n                    </ul>\n                </div>\n\n            )\n        }\n        else if (this.state.data.length === 0 && this.state.data2.length === 0) {\n            return (\n\n                <div className=\"container\">\n                    <a href=\"/uploadedissues\"><h4>Uploaded Issues</h4></a>\n                    <div className=\"container\">\n                        <div className=\"tile-container\">\n                            <div className=\"center-text\">\n                                <h5>No Issues Uploaded</h5>\n                            </div>\n                        </div>\n                    </div>\n                    <a href=\"/uploadedproblems\"><h4>Uploaded Problems</h4></a>\n                    <div className=\"tile-container\">\n                        <div className=\"center-text\">\n                            <h5>No Problems Uploaded</h5>\n                        </div>\n                    </div>\n                </div>\n\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(Uploaded);\n","import React, { Component } from 'react'\nimport UpIssueTile from '../../components/layout/UpIssueTile';\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\n\nclass UploadedIssues extends Component {\n    state = {\n        data: []\n    }\n    componentDidMount() {\n        // var axios = require('axios');\n        // axios.get(\"https://git-lance.firebaseapp.com/api/solve/bounty\").then((res) => {\n        //     var data = res.data.records;\n        //     this.setState({ data });\n        // })\n\n        var fetch = require('node-fetch');\n        const { auth } = this.props;\n\n        var options = {\n            method: 'POST',\n            url: 'https://git-lance.firebaseapp.com/api/upload/uploadedIssues',\n            headers:\n            {\n                'Postman-Token': '41582a4d-a65f-40d8-ac5d-ca27b473348d',\n                'cache-control': 'no-cache',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ userId: auth.uid }),\n            json: true\n        };\n\n        fetch(options.url, options).then((res) => res.json()).then((res) => {\n            var data = res.records;\n            this.setState({ data })\n        })\n\n    }\n\n\n\n    render() {\n        var recordsLength = this.state.data.length;\n\n        var rows = Math.ceil(recordsLength / 4);\n        var count = 0;\n        var rowMapping = [];\n        for (let i = 0; i < rows; i++) rowMapping.push(i);\n\n        var rowData = [];\n        var currRow = []\n        for (let i = 0; i < recordsLength; i++) {\n            if (i % 4 != 0 || i == 0) {\n                currRow.push(this.state.data[i]);\n            }\n            else {\n                rowData.push(currRow);\n                currRow = [];\n                currRow.push(this.state.data[i]);\n            }\n            if (i == recordsLength - 1) {\n                currRow.push(this.state.data[i]);\n                rowData.push(currRow);\n            }\n        }\n\n        if (this.state.data.length) {\n            return (\n                <div className=\"container\">\n                    <h4>Uploaded Issues</h4>\n                    {/* <div className=\"row\">\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                    </div> */}\n                    {\n                        rowMapping.map((outerValue, outerIndex) => {\n                            return (\n                                <div className=\"row\">\n                                    {\n                                        rowData[outerIndex].map(\n                                            (value, index) => {\n                                                return (\n                                                    <div className=\"col m3\">\n                                                        <Link to={{\n                                                            pathname: \"/subissue\", data: value\n                                                        }}> <UpIssueTile\n                                                                title={value.bountyName}\n                                                                name={value.creatorName}\n                                                                repo={value.Repo}\n                                                                pay={value.bountyValue}\n                                                            /></Link>\n                                                    </div>\n                                                )\n                                            }\n                                        )\n                                    }\n                                </div>\n\n                            )\n\n                        })\n                    }\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container\">\n                    <h4>Uploaded Issues</h4>\n                    {/* <div className=\"row\">\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                    </div> */}\n                    <div className=\"center-text\">\n                        <h5>No Issues Uploaded</h5>\n                    </div>\n                </div>\n            )\n        }\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(UploadedIssues)","import React, { Component } from 'react'\nimport UpProbTile from '../../components/layout/UpProbTile';\nimport { Link, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\n\nclass UploadedProblems extends Component {\n    state = {\n        data: []\n    }\n    componentDidMount() {\n        // var axios = require('axios');\n        // axios.get(\"https://git-lance.firebaseapp.com/api/solve/problems\").then((res) => {\n        //     var data = res.data.records;\n        //     this.setState({ data });\n        // })\n\n        var fetch = require('node-fetch')\n\n        const { auth } = this.props;\n\n        var options = {\n            method: 'POST',\n            url: 'https://git-lance.firebaseapp.com/api/upload/uploadedProblems',\n            headers:\n            {\n                'Postman-Token': '90e98916-3334-4913-9fbf-8242fdd295d1',\n                'cache-control': 'no-cache',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ userId: auth.uid }),\n            json: true\n        };\n\n        fetch(options.url, options).then((res) => res.json()).then((res) => {\n            var data = res.records;\n            this.setState({ data })\n        })\n    }\n\n\n\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to=\"/signin\" />\n\n        var recordsLength = this.state.data.length;\n        var rows = Math.ceil(recordsLength / 4);\n        var count = 0;\n        var rowMapping = [];\n        for (let i = 0; i < rows; i++) rowMapping.push(i);\n\n        var rowData = [];\n        var currRow = []\n        for (let i = 0; i < recordsLength; i++) {\n            if (i % 4 != 0 || i == 0) {\n                currRow.push(this.state.data[i]);\n            }\n            else {\n                rowData.push(currRow);\n                currRow = [];\n                currRow.push(this.state.data[i]);\n            }\n            if (i == recordsLength - 1) {\n                currRow.push(this.state.data[i]);\n                rowData.push(currRow);\n            }\n        }\n\n        if (this.state.data.length) {\n            return (\n                <div className=\"container\">\n                    <h4>Uploaded Problems</h4>\n                    {/* <div className=\"row\">\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                    </div> */}\n                    {\n                        rowMapping.map((outerValue, outerIndex) => {\n                            return (\n                                <div className=\"row\">\n                                    {\n                                        rowData[outerIndex].map(\n                                            (value, index) => {\n                                                var scoreVal = \"no submissions\";\n                                                var currSubmissions = value.submissions;\n                                                var currBestSubmission = value.bestSubmissionId;\n                                                var submissionsVal = \"no submissions\";\n                                                if (Object.keys(currSubmissions).length) {\n                                                    submissionsVal = Object.keys(currSubmissions).length;\n                                                    scoreVal = currSubmissions[currBestSubmission].scores.total;\n                                                }\n\n                                                return (\n                                                    <div className=\"col m3\">\n                                                        <Link to={{\n                                                            pathname: \"/subproblem\", data: value\n                                                        }}> <UpProbTile\n                                                                title={value.problemHeading}\n                                                                description={value.problemDescription}\n                                                                name={value.creatorName}\n                                                                score={scoreVal}\n                                                                submissions={submissionsVal}\n                                                                pay={value.pay}\n                                                            /></Link>\n                                                    </div>\n                                                )\n                                            }\n                                        )\n                                    }\n                                </div>\n\n                            )\n\n                        })\n                    }\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container\">\n                    <h4>Uploaded Problems</h4>\n                    {/* <div className=\"row\">\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                        <div className=\"col m3\">\n                            <UpIssueTile />\n                        </div>\n                    </div> */}\n                    <div className=\"center-text\">\n                        <h5>No Problems Uploaded</h5>\n                    </div>\n                </div>\n            )\n        }\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(UploadedProblems)","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport history from \"../../history\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Buy extends Component {\n  handleBuy = () => {\n    var fetch = require(\"node-fetch\");\n    const { auth } = this.props;\n\n    var paymentDetails = {\n      from: auth.uid,\n      to: this.props.location.solverID,\n      amount: this.props.location.dataProblem.pay\n    };\n\n    var options = {\n      method: \"POST\",\n      url: \"https://git-lance.firebaseapp.com/api/payment/makeTransaction\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(paymentDetails),\n      // {\n      //     from: 'DOlzbAFrTJOxn1tYzOdWVBUkT0a2',\n      //     to: 'gOQFfO6U0PXzVptg3M1ig7MBY2K3',\n      //     amount: '30'\n      // },\n      json: true\n    };\n    // document.getElementById(\"my_iframe\").src = \"myCode.zip\";\n\n    fetch(options.url, options)\n      .then(res => res.json())\n      .then(res => {\n        history.push(\"/uploaded\");\n        window.location.reload();\n      });\n  };\n\n  handleReject = () => {\n    (\"Reject\");\n  };\n\n  render() {\n    if (!this.props.location.dataProblem || !this.props.location.dataSolver)\n      return <Redirect to=\"/uploaded\" />;\n    return (\n      <div className=\"container\">\n        <div className=\"buy-pos\">\n          <div className=\"card-panel card-border teal lighten-2 buy-card white-text center\">\n            <h4>{this.props.location.dataProblem.problemHeading}</h4>\n            <h5>{this.props.location.dataSolver.solverUserName}</h5>\n            <h5>Amount: {this.props.location.dataProblem.pay}</h5>\n            <div className=\"row\">\n              <button\n                onClick={this.handleReject}\n                className=\"btn-floating btn-large left white\"\n              >\n                <i className=\"material-icons red-text\">thumb_down</i>\n              </button>\n              <a href=\"myCode.zip\" download>\n                <button\n                  onClick={this.handleBuy}\n                  className=\"btn-floating btn-large right white\"\n                >\n                  <i className=\"material-icons green-text\">thumb_up</i>\n                </button>\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nexport default connect(mapStateToProps)(Buy);\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nclass SubmittedIssue extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"card-panel teal card-border white-text\">\n                    <h4>{this.props.data.bountyName}</h4>\n                    <h5>{this.props.data.Repo}</h5>\n                    <h5>{this.props.answer}</h5>\n                </div>\n                <Link to={{ pathname: \"/buy\", data: this.props.data }}><button className=\"btn right\">Buy</button></Link>\n            </div>\n        )\n    }\n}\n\nexport default SubmittedIssue","import React, { Component } from 'react'\nimport SubmittedIssue from '../../components/layout/SubmittedIssue';\n\nclass IssueSubs extends Component {\n\n    render() {\n\n        return (\n            <SubmittedIssue\n                data={this.props.location.data}\n                answer=\"Lorem Ipsum\" />\n        )\n    }\n}\n\nexport default IssueSubs;","import React, { Component } from 'react';\nimport { Progress } from 'react-sweet-progress';\nimport \"react-sweet-progress/lib/style.css\";\n\nclass ProblemSubmitted extends Component {\n    render(props) {\n\n        return (\n            <div className=\"card-panel scorecard white-text\">\n                <div className=\"row\">\n                    <div className=\"col m7\">\n                        <div className=\"row\">\n                            <h4>{this.props.data.problemHeading}</h4>\n                            <div className=\"col m5\">\n                                <h5>Run Time</h5>\n                            </div>\n                            <div className=\"col m5\">\n                                <div className=\"progress-align\">\n                                    <Progress percent={this.props.data.scores.time} />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col m5\">\n                                <h5>Memory</h5>\n                            </div>\n                            <div className=\"col m5\">\n                                <div className=\"progress-align\">\n                                    <Progress percent={this.props.data.scores.memory} />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col m5\">\n                                <h5>Efficiency</h5>\n                            </div>\n                            <div className=\"col m5\">\n                                <div className=\"progress-align\">\n                                    <Progress percent={this.props.data.scores.efficiency} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col m5\">\n                        <h4>Overall Score</h4>\n                        <div className=\"circle-align\">\n                            <Progress\n                                type=\"circle\"\n                                percent={this.props.data.scores.total}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div >\n        )\n    }\n}\n\nexport default ProblemSubmitted;","import React, { Component } from 'react'\nimport ProblemSubmitted from '../../components/layout/ProblemSubmitted';\nimport { connect } from 'react-redux'\n\nclass SubmittedProblem extends Component {\n    constructor() {\n        super();\n        this.state = {\n            submissions: []\n        }\n    }\n\n    componentDidMount() {\n        var fetch = require(\"node-fetch\");\n\n        const { auth } = this.props;\n\n        var options = {\n            method: 'POST',\n            url: 'https://git-lance.firebaseapp.com/api/solve/selfProblemSubmission',\n            headers:\n            {\n                'Postman-Token': '49318d42-def5-43dc-8515-1c67eead447b',\n                'cache-control': 'no-cache',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ userId: auth.uid }),\n            json: true\n        };\n\n        fetch(options.url, options).then((res) => res.json()).then((res) => {\n            this.setState({ \"submissions\": res.records });\n\n        })\n    }\n    render() {\n        console.log(this.state.submissions)\n        if (this.state.submissions.length) {\n            return (\n                <div className=\"container\">\n                    <h4>Submitted Problems</h4>\n                    {\n                        this.state.submissions.map(i => {\n                            return (\n                                <ProblemSubmitted\n                                    data={i}\n                                />\n                            )\n                        })}\n                </div>\n            )\n        }\n        else {\n            return (\n                <div className=\"container\">\n                    <h4>Submitted Problems</h4>\n                    <div className=\"center-text\">\n                        <h5>No Problems Submitted</h5>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(SubmittedProblem);","import React, { Component } from 'react'\n\nclass IssueSubmitted extends Component {\n    render(props) {\n\n        return (\n            <div className=\"container\">\n                <div className=\"card-panel teal card-border white-text\">\n                    <h4>{this.props.data.bountyName}</h4>\n                    <h5>Repo: {this.props.data.gitRepo}</h5>\n                    <h5>Answer: {this.props.data.answer}</h5>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default IssueSubmitted","import React, { Component } from 'react'\nimport IssueSubmitted from '../../components/layout/IssueSubmitted';\nimport { connect } from 'react-redux'\n\nclass SubmittedIssues extends Component {\n    constructor() {\n        super();\n        this.state = {\n            submissions: []\n        }\n    }\n    componentDidMount() {\n\n        const { auth } = this.props;\n        var fetch = require(\"node-fetch\");\n\n        var options = {\n            method: 'POST',\n            url: 'https://git-lance.firebaseapp.com/api/solve/selfIssueSubmission',\n            headers:\n            {\n                'Postman-Token': '7a568af7-e01c-4e29-853a-f40bd04c6cbd',\n                'cache-control': 'no-cache',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ userId: auth.uid }),\n            json: true\n        };\n\n        fetch(options.url, options).then((res) => res.json()).then((res) => {\n            this.setState({ \"submissions\": res.records });\n\n        })\n    }\n    render() {\n        if (this.state.submissions.length) {\n            return (\n                <div className=\"container\">\n                    <h4>Submitted Issues</h4>\n                    {\n                        this.state.submissions.map(i => {\n                            return (\n                                <IssueSubmitted data={i} />\n                            )\n                        })\n                    }\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container\">\n                    <h4>Submitted Issues</h4>\n                    <div className=\"center-text\">\n                        <h5>No Issues Submitted</h5>\n                    </div>\n                </div>\n            )\n        }\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps)(SubmittedIssues)","import React, { Component } from 'react'\nimport ProblemSubmitted from '../../components/layout/ProblemSubmitted';\n\nclass FinalScores extends Component {\n    render() {\n        console.log(this.props)\n        return (\n            <div>\n                <ProblemSubmitted\n                    data={this.props.history.location.state}\n                />\n                <div className=\"row\">\n                    <div className=\"col m6\">\n                        <div className=\"card-panel card-border teal white-text\">\n                            <h6>Output</h6>\n                            {this.props.history.location.state.file.output}\n                        </div>\n                    </div>\n                    <div className=\"col m6\">\n                        <div className=\"card-panel card-border teal white-text\">\n                            <h6>Expected Output</h6>\n                            {this.props.history.location.state.file.actualOutput}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default FinalScores","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\nimport './App.css'\nimport './index.css';\nimport 'materialize-css';\nimport FeedSolve from './pages/solve/FeedSolve';\nimport Profile from './pages/aesthetics/Profile'\nimport Navbar from './components/layout/Navbar';\nimport * as serviceWorker from './serviceWorker';\nimport Landing from './pages/aesthetics/Landing';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport firebaseConfig from './config/firebaseConfig'\nimport Upload from './pages/uploads/Upload';\nimport history from './history'\nimport Problem from './pages/solve/Problem'\nimport Issues from './pages/solve/Issues';\nimport SolveIssues from './pages/workspace/SolveIssues';\nimport SolveProblem from './pages/workspace/SolveProblem';\nimport ProblemUp from './pages/subto/ProblemSubs';\nimport Uploaded from './pages/uploads/Uploaded';\nimport UploadedIssues from './pages/uploads/UploadedIssues';\nimport UploadedProblems from './pages/uploads/UploadedProblems';\nimport { Router, withRouter } from 'react-router';\nimport Buy from './pages/functional/Buy'\n\nimport IssueSubs from './pages/subto/IssueSubs';\nimport ProblemSubs from './pages/subto/ProblemSubs';\nimport SubmittedProblem from './pages/subby/SubmittedProblems';\nimport SubmittedIssues from './pages/subby/SubmittedIssues';\nimport FinalScores from './pages/summary/FinalScores';\n\n\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reactReduxFirebase(firebaseConfig, { attachAuthIsReady: true }),\n        reduxFirestore(firebaseConfig)\n    )\n);\n\nclass Routing extends React.Component {\n    render() {\n        return (\n            <BrowserRouter history={history}>\n                <Navbar />\n                <div>\n                    <Switch>\n                        <Route exact path=\"/\" component={withRouter(Landing)} />\n                        <Route path=\"/issues\" component={withRouter(Issues)} />\n                        <Route path=\"/signin\" component={withRouter(SignIn)} />\n                        <Route path=\"/signup\" component={withRouter(SignUp)} />\n                        <Route path=\"/home\" component={withRouter(FeedSolve)} />\n                        <Route path=\"/profile\" component={withRouter(Profile)} />\n                        <Route path=\"/upload\" component={withRouter(Upload)} />\n                        <Route path=\"/problem\" component={withRouter(Problem)} />\n                        <Route path=\"/solissue\" component={withRouter(SolveIssues)} />\n                        <Route path=\"/solproblem\" component={withRouter(SolveProblem)} />\n                        <Route path=\"/subproblem\" component={withRouter(ProblemSubs)} />\n                        <Route path=\"/subissue\" component={withRouter(IssueSubs)} />\n                        <Route path=\"/uploaded\" component={withRouter(Uploaded)} />\n                        <Route path=\"/uploadedissues\" component={withRouter(UploadedIssues)} />\n                        <Route path=\"/uploadedproblems\" component={withRouter(UploadedProblems)} />\n                        <Route path=\"/issuesub\" component={withRouter(SubmittedIssues)} />\n                        <Route path=\"/problemsub\" component={withRouter(SubmittedProblem)} />\n                        <Route path=\"/buy\" component={withRouter(Buy)} />\n                        <Route path=\"/scorecard\" component={withRouter(FinalScores)} />\n                    </Switch>\n                </div>\n            </BrowserRouter>\n        )\n    }\n}\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><Routing /></Provider>, document.getElementById('root'));\n})\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\n"],"sourceRoot":""}